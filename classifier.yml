---
# For an explanation of these rules, see
# https://github.com/rackn/classifier/blob/master/README.md
#
# This ruleset will cycle any nodes placed in template-idle
# through template-deploy to template-cleanup and back to
# template-idle, where the cycling will start again.
# It acts as an example of how complex automated workflows
# cam be created using a combination of classifier rules and
# workload-specific roles.
#
### PLEASE NOTE ###
#
# The layout of this file may change as the classifier matures.
# Right now the classifier is in working proof of concept stage,
# and there are several useability and interoperability improvements
# on the table.
Name: template-workload-ruleset
Active: true
Description: "The ruleset used to implement the template workload lifecycle"
Rules:
  - EventSelectors:
      - event: on_node_move
    Matchers:
      - JSON:
          Selector: ':root .Evt .node .uuid'
          PickResults:
            node-uuid: 0
      - JSON:
          Selector: ':root .Evt .deployment .name'
          PickResults:
            deployment-name: 0
      - Eq: [ '$deployment-name', 'template-cleanup' ]
    Actions:
      - Bind:
          NodeID: '$node-uuid'
          RoleID: template-scrub-node
      - Node:
          Action: "Commit"
          UUID: '$node-uuid'
      - Node:
          Action: "Scrub"
          UUID: '$node-uuid'
      - Node:
          Action: "Redeploy"
          UUID: '$node-uuid'
  - Actions:
      - Stop: true
  - EventSelectors:
      - event: on_active
        obj_class: role
        obj_id: template-scrub-node
    Matchers:
      - JSON:
          Selector: ':root .Evt .node .uuid'
          PickResults:
            node-uuid: 0
    Actions:
      - Bind:
          NodeID: '$node-uuid'
          DeploymentID: 'template-idle'
      - Node:
          UUID: '$node-uuid'
          Action: "Scrub"
  - Actions:
      - Stop: true
  - EventSelectors:
      - event: on_node_move
    Matchers:
      - JSON:
          Selector: ':root .Evt .node .uuid'
          PickResults:
            node-uuid: 0
      - JSON:
          Selector: ':root .Evt .deployment .name'
          PickResults:
            deployment-name: 0
      - Eq: [ '$deployment-name', 'template-deploy' ]
    Actions:
      - Bind:
          NodeID: '$node-uuid'
          RoleID: template-echo-a-value-with-a-script
      - Commit:
          NodeID: '$node-uuid'
  - Actions:
      - Stop: true   
  - EventSelectors:
      - event: on_active
        obj_class: role
        obj_id: template-echo-a-value-with-a-script
    Matchers:
      - JSON:
          Selector: ':root .Evt .node .uuid'
          PickResults:
            node-uuid: 0
    Actions:
      - Bind:
          NodeID: '$node-uuid'
          DeploymentID: 'template-cleanup'
  - Actions:
      - Stop: true
  - EventSelectors:
      - event: on_active
        obj_class: role
        obj_id: rebar-managed-node
    Matchers:
      - JSON:
          Selector: ':root .Evt .node .uuid'
          PickResults:
            node-uuid: 0
      - JSON:
          Selector: ':root .Evt .deployment .name'
          PickResults:
            deployment-name: 0
      - Eq: [ '$deployment-name', 'template-idle' ]
    Actions:
      - Bind:
          NodeID: '$node-uuid'
          DeploymentID: 'template-deploy'
  - Actions:
      - Stop: true
