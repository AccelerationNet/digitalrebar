package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// EventselectorInput eventselector input
// swagger:model eventselector-input
type EventselectorInput struct {

	// event sink id
	EventSinkID int64 `json:"event_sink_id,omitempty"`

	// selector
	Selector *EventselectorInputSelector `json:"selector,omitempty"`

	// tenant id
	TenantID int64 `json:"tenant_id,omitempty"`
}

// Validate validates this eventselector input
func (m *EventselectorInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSelector(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EventselectorInput) validateSelector(formats strfmt.Registry) error {

	if swag.IsZero(m.Selector) { // not required
		return nil
	}

	if m.Selector != nil {

		if err := m.Selector.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

// EventselectorInputSelector eventselector input selector
// swagger:model EventselectorInputSelector
type EventselectorInputSelector struct {

	// event
	Event string `json:"event,omitempty"`

	// obj class
	ObjClass string `json:"obj_class,omitempty"`

	// obj id
	ObjID string `json:"obj_id,omitempty"`
}

// Validate validates this eventselector input selector
func (m *EventselectorInputSelector) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
