package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GETTenantHandlerFunc turns a function with the right signature into a g e t tenant handler
type GETTenantHandlerFunc func(GETTenantParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GETTenantHandlerFunc) Handle(params GETTenantParams) middleware.Responder {
	return fn(params)
}

// GETTenantHandler interface for that can handle valid g e t tenant params
type GETTenantHandler interface {
	Handle(GETTenantParams) middleware.Responder
}

// NewGETTenant creates a new http.Handler for the g e t tenant operation
func NewGETTenant(ctx *middleware.Context, handler GETTenantHandler) *GETTenant {
	return &GETTenant{Context: ctx, Handler: handler}
}

/*GETTenant swagger:route GET /tenants/{id} Tenants gETTenant

Get Tenant

*/
type GETTenant struct {
	Context *middleware.Context
	Handler GETTenantHandler
}

func (o *GETTenant) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGETTenantParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
