package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// POSTTenantHandlerFunc turns a function with the right signature into a p o s t tenant handler
type POSTTenantHandlerFunc func(POSTTenantParams) middleware.Responder

// Handle executing the request and returning a response
func (fn POSTTenantHandlerFunc) Handle(params POSTTenantParams) middleware.Responder {
	return fn(params)
}

// POSTTenantHandler interface for that can handle valid p o s t tenant params
type POSTTenantHandler interface {
	Handle(POSTTenantParams) middleware.Responder
}

// NewPOSTTenant creates a new http.Handler for the p o s t tenant operation
func NewPOSTTenant(ctx *middleware.Context, handler POSTTenantHandler) *POSTTenant {
	return &POSTTenant{Context: ctx, Handler: handler}
}

/*POSTTenant swagger:route POST /tenants Tenants pOSTTenant

Create Tenant

*/
type POSTTenant struct {
	Context *middleware.Context
	Handler POSTTenantHandler
}

func (o *POSTTenant) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPOSTTenantParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
