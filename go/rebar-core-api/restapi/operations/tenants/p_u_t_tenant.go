package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PUTTenantHandlerFunc turns a function with the right signature into a p u t tenant handler
type PUTTenantHandlerFunc func(PUTTenantParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PUTTenantHandlerFunc) Handle(params PUTTenantParams) middleware.Responder {
	return fn(params)
}

// PUTTenantHandler interface for that can handle valid p u t tenant params
type PUTTenantHandler interface {
	Handle(PUTTenantParams) middleware.Responder
}

// NewPUTTenant creates a new http.Handler for the p u t tenant operation
func NewPUTTenant(ctx *middleware.Context, handler PUTTenantHandler) *PUTTenant {
	return &PUTTenant{Context: ctx, Handler: handler}
}

/*PUTTenant swagger:route PUT /tenants/{id} Tenants pUTTenant

Update Tenant

*/
type PUTTenant struct {
	Context *middleware.Context
	Handler PUTTenantHandler
}

func (o *PUTTenant) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPUTTenantParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
