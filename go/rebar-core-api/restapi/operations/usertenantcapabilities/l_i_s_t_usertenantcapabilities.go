package usertenantcapabilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// LISTUsertenantcapabilitiesHandlerFunc turns a function with the right signature into a l i s t usertenantcapabilities handler
type LISTUsertenantcapabilitiesHandlerFunc func(LISTUsertenantcapabilitiesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LISTUsertenantcapabilitiesHandlerFunc) Handle(params LISTUsertenantcapabilitiesParams) middleware.Responder {
	return fn(params)
}

// LISTUsertenantcapabilitiesHandler interface for that can handle valid l i s t usertenantcapabilities params
type LISTUsertenantcapabilitiesHandler interface {
	Handle(LISTUsertenantcapabilitiesParams) middleware.Responder
}

// NewLISTUsertenantcapabilities creates a new http.Handler for the l i s t usertenantcapabilities operation
func NewLISTUsertenantcapabilities(ctx *middleware.Context, handler LISTUsertenantcapabilitiesHandler) *LISTUsertenantcapabilities {
	return &LISTUsertenantcapabilities{Context: ctx, Handler: handler}
}

/*LISTUsertenantcapabilities swagger:route GET /usertenantcapabilities Usertenantcapabilities lISTUsertenantcapabilities

List Usertenantcapabilities

*/
type LISTUsertenantcapabilities struct {
	Context *middleware.Context
	Handler LISTUsertenantcapabilitiesHandler
}

func (o *LISTUsertenantcapabilities) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewLISTUsertenantcapabilitiesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
