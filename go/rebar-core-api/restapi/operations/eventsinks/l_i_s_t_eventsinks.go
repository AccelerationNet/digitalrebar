package eventsinks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// LISTEventsinksHandlerFunc turns a function with the right signature into a l i s t eventsinks handler
type LISTEventsinksHandlerFunc func(LISTEventsinksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LISTEventsinksHandlerFunc) Handle(params LISTEventsinksParams) middleware.Responder {
	return fn(params)
}

// LISTEventsinksHandler interface for that can handle valid l i s t eventsinks params
type LISTEventsinksHandler interface {
	Handle(LISTEventsinksParams) middleware.Responder
}

// NewLISTEventsinks creates a new http.Handler for the l i s t eventsinks operation
func NewLISTEventsinks(ctx *middleware.Context, handler LISTEventsinksHandler) *LISTEventsinks {
	return &LISTEventsinks{Context: ctx, Handler: handler}
}

/*LISTEventsinks swagger:route GET /eventsinks Eventsinks lISTEventsinks

List Eventsinks

*/
type LISTEventsinks struct {
	Context *middleware.Context
	Handler LISTEventsinksHandler
}

func (o *LISTEventsinks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewLISTEventsinksParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
