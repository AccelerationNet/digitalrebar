package attribs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// LISTAttribsHandlerFunc turns a function with the right signature into a l i s t attribs handler
type LISTAttribsHandlerFunc func(LISTAttribsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LISTAttribsHandlerFunc) Handle(params LISTAttribsParams) middleware.Responder {
	return fn(params)
}

// LISTAttribsHandler interface for that can handle valid l i s t attribs params
type LISTAttribsHandler interface {
	Handle(LISTAttribsParams) middleware.Responder
}

// NewLISTAttribs creates a new http.Handler for the l i s t attribs operation
func NewLISTAttribs(ctx *middleware.Context, handler LISTAttribsHandler) *LISTAttribs {
	return &LISTAttribs{Context: ctx, Handler: handler}
}

/*LISTAttribs swagger:route GET /attribs Attribs lISTAttribs

List Attribs

*/
type LISTAttribs struct {
	Context *middleware.Context
	Handler LISTAttribsHandler
}

func (o *LISTAttribs) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewLISTAttribsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
