package attribs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DELETEAttribHandlerFunc turns a function with the right signature into a d e l e t e attrib handler
type DELETEAttribHandlerFunc func(DELETEAttribParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DELETEAttribHandlerFunc) Handle(params DELETEAttribParams) middleware.Responder {
	return fn(params)
}

// DELETEAttribHandler interface for that can handle valid d e l e t e attrib params
type DELETEAttribHandler interface {
	Handle(DELETEAttribParams) middleware.Responder
}

// NewDELETEAttrib creates a new http.Handler for the d e l e t e attrib operation
func NewDELETEAttrib(ctx *middleware.Context, handler DELETEAttribHandler) *DELETEAttrib {
	return &DELETEAttrib{Context: ctx, Handler: handler}
}

/*DELETEAttrib swagger:route DELETE /attribs/{id} Attribs dELETEAttrib

Delete Attrib

*/
type DELETEAttrib struct {
	Context *middleware.Context
	Handler DELETEAttribHandler
}

func (o *DELETEAttrib) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewDELETEAttribParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
