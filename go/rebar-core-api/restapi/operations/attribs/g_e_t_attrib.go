package attribs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GETAttribHandlerFunc turns a function with the right signature into a g e t attrib handler
type GETAttribHandlerFunc func(GETAttribParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GETAttribHandlerFunc) Handle(params GETAttribParams) middleware.Responder {
	return fn(params)
}

// GETAttribHandler interface for that can handle valid g e t attrib params
type GETAttribHandler interface {
	Handle(GETAttribParams) middleware.Responder
}

// NewGETAttrib creates a new http.Handler for the g e t attrib operation
func NewGETAttrib(ctx *middleware.Context, handler GETAttribHandler) *GETAttrib {
	return &GETAttrib{Context: ctx, Handler: handler}
}

/*GETAttrib swagger:route GET /attribs/{id} Attribs gETAttrib

Get Attrib

*/
type GETAttrib struct {
	Context *middleware.Context
	Handler GETAttribHandler
}

func (o *GETAttrib) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGETAttribParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
