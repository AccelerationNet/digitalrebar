package profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DELETEProfileHandlerFunc turns a function with the right signature into a d e l e t e profile handler
type DELETEProfileHandlerFunc func(DELETEProfileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DELETEProfileHandlerFunc) Handle(params DELETEProfileParams) middleware.Responder {
	return fn(params)
}

// DELETEProfileHandler interface for that can handle valid d e l e t e profile params
type DELETEProfileHandler interface {
	Handle(DELETEProfileParams) middleware.Responder
}

// NewDELETEProfile creates a new http.Handler for the d e l e t e profile operation
func NewDELETEProfile(ctx *middleware.Context, handler DELETEProfileHandler) *DELETEProfile {
	return &DELETEProfile{Context: ctx, Handler: handler}
}

/*DELETEProfile swagger:route DELETE /profiles/{id} Profiles dELETEProfile

Delete Profile

*/
type DELETEProfile struct {
	Context *middleware.Context
	Handler DELETEProfileHandler
}

func (o *DELETEProfile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewDELETEProfileParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
