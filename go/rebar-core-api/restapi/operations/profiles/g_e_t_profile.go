package profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GETProfileHandlerFunc turns a function with the right signature into a g e t profile handler
type GETProfileHandlerFunc func(GETProfileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GETProfileHandlerFunc) Handle(params GETProfileParams) middleware.Responder {
	return fn(params)
}

// GETProfileHandler interface for that can handle valid g e t profile params
type GETProfileHandler interface {
	Handle(GETProfileParams) middleware.Responder
}

// NewGETProfile creates a new http.Handler for the g e t profile operation
func NewGETProfile(ctx *middleware.Context, handler GETProfileHandler) *GETProfile {
	return &GETProfile{Context: ctx, Handler: handler}
}

/*GETProfile swagger:route GET /profiles/{id} Profiles gETProfile

Get Profile

*/
type GETProfile struct {
	Context *middleware.Context
	Handler GETProfileHandler
}

func (o *GETProfile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGETProfileParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
