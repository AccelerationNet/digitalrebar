package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// POSTDeploymentsHandlerFunc turns a function with the right signature into a p o s t deployments handler
type POSTDeploymentsHandlerFunc func(POSTDeploymentsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn POSTDeploymentsHandlerFunc) Handle(params POSTDeploymentsParams) middleware.Responder {
	return fn(params)
}

// POSTDeploymentsHandler interface for that can handle valid p o s t deployments params
type POSTDeploymentsHandler interface {
	Handle(POSTDeploymentsParams) middleware.Responder
}

// NewPOSTDeployments creates a new http.Handler for the p o s t deployments operation
func NewPOSTDeployments(ctx *middleware.Context, handler POSTDeploymentsHandler) *POSTDeployments {
	return &POSTDeployments{Context: ctx, Handler: handler}
}

/*POSTDeployments swagger:route POST /deployments Deployments pOSTDeployments

Create Deployments

*/
type POSTDeployments struct {
	Context *middleware.Context
	Handler POSTDeploymentsHandler
}

func (o *POSTDeployments) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPOSTDeploymentsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
