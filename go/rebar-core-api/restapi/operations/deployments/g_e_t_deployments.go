package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GETDeploymentsHandlerFunc turns a function with the right signature into a g e t deployments handler
type GETDeploymentsHandlerFunc func(GETDeploymentsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GETDeploymentsHandlerFunc) Handle(params GETDeploymentsParams) middleware.Responder {
	return fn(params)
}

// GETDeploymentsHandler interface for that can handle valid g e t deployments params
type GETDeploymentsHandler interface {
	Handle(GETDeploymentsParams) middleware.Responder
}

// NewGETDeployments creates a new http.Handler for the g e t deployments operation
func NewGETDeployments(ctx *middleware.Context, handler GETDeploymentsHandler) *GETDeployments {
	return &GETDeployments{Context: ctx, Handler: handler}
}

/*GETDeployments swagger:route GET /deployments/{id} Deployments gETDeployments

Get Deployments

*/
type GETDeployments struct {
	Context *middleware.Context
	Handler GETDeploymentsHandler
}

func (o *GETDeployments) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGETDeploymentsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
