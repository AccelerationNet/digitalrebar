package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GETNetworkHandlerFunc turns a function with the right signature into a g e t network handler
type GETNetworkHandlerFunc func(GETNetworkParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GETNetworkHandlerFunc) Handle(params GETNetworkParams) middleware.Responder {
	return fn(params)
}

// GETNetworkHandler interface for that can handle valid g e t network params
type GETNetworkHandler interface {
	Handle(GETNetworkParams) middleware.Responder
}

// NewGETNetwork creates a new http.Handler for the g e t network operation
func NewGETNetwork(ctx *middleware.Context, handler GETNetworkHandler) *GETNetwork {
	return &GETNetwork{Context: ctx, Handler: handler}
}

/*GETNetwork swagger:route GET /networks/{id} Networks gETNetwork

Get Network

*/
type GETNetwork struct {
	Context *middleware.Context
	Handler GETNetworkHandler
}

func (o *GETNetwork) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGETNetworkParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
