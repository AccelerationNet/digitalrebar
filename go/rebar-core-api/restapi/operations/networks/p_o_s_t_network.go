package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// POSTNetworkHandlerFunc turns a function with the right signature into a p o s t network handler
type POSTNetworkHandlerFunc func(POSTNetworkParams) middleware.Responder

// Handle executing the request and returning a response
func (fn POSTNetworkHandlerFunc) Handle(params POSTNetworkParams) middleware.Responder {
	return fn(params)
}

// POSTNetworkHandler interface for that can handle valid p o s t network params
type POSTNetworkHandler interface {
	Handle(POSTNetworkParams) middleware.Responder
}

// NewPOSTNetwork creates a new http.Handler for the p o s t network operation
func NewPOSTNetwork(ctx *middleware.Context, handler POSTNetworkHandler) *POSTNetwork {
	return &POSTNetwork{Context: ctx, Handler: handler}
}

/*POSTNetwork swagger:route POST /networks Networks pOSTNetwork

Create Network

*/
type POSTNetwork struct {
	Context *middleware.Context
	Handler POSTNetworkHandler
}

func (o *POSTNetwork) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPOSTNetworkParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
