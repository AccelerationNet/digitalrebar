package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

/*PATCHNodeDefault p a t c h node default

swagger:response pATCHNodeDefault
*/
type PATCHNodeDefault struct {
	_statusCode int

	// In: body
	Payload PATCHNodeDefaultBody `json:"body,omitempty"`
}

// NewPATCHNodeDefault creates PATCHNodeDefault with default headers values
func NewPATCHNodeDefault(code int) *PATCHNodeDefault {
	if code <= 0 {
		code = 500
	}

	return &PATCHNodeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the p a t c h node default response
func (o *PATCHNodeDefault) WithStatusCode(code int) *PATCHNodeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the p a t c h node default response
func (o *PATCHNodeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the p a t c h node default response
func (o *PATCHNodeDefault) WithPayload(payload PATCHNodeDefaultBody) *PATCHNodeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the p a t c h node default response
func (o *PATCHNodeDefault) SetPayload(payload PATCHNodeDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PATCHNodeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
