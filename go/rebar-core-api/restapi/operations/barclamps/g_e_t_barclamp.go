package barclamps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GETBarclampHandlerFunc turns a function with the right signature into a g e t barclamp handler
type GETBarclampHandlerFunc func(GETBarclampParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GETBarclampHandlerFunc) Handle(params GETBarclampParams) middleware.Responder {
	return fn(params)
}

// GETBarclampHandler interface for that can handle valid g e t barclamp params
type GETBarclampHandler interface {
	Handle(GETBarclampParams) middleware.Responder
}

// NewGETBarclamp creates a new http.Handler for the g e t barclamp operation
func NewGETBarclamp(ctx *middleware.Context, handler GETBarclampHandler) *GETBarclamp {
	return &GETBarclamp{Context: ctx, Handler: handler}
}

/*GETBarclamp swagger:route GET /barclamps/{id} Barclamps gETBarclamp

Get Barclamp

*/
type GETBarclamp struct {
	Context *middleware.Context
	Handler GETBarclampHandler
}

func (o *GETBarclamp) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGETBarclampParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
