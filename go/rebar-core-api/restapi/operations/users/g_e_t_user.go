package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GETUserHandlerFunc turns a function with the right signature into a g e t user handler
type GETUserHandlerFunc func(GETUserParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GETUserHandlerFunc) Handle(params GETUserParams) middleware.Responder {
	return fn(params)
}

// GETUserHandler interface for that can handle valid g e t user params
type GETUserHandler interface {
	Handle(GETUserParams) middleware.Responder
}

// NewGETUser creates a new http.Handler for the g e t user operation
func NewGETUser(ctx *middleware.Context, handler GETUserHandler) *GETUser {
	return &GETUser{Context: ctx, Handler: handler}
}

/*GETUser swagger:route GET /users/{id} Users gETUser

Get User

*/
type GETUser struct {
	Context *middleware.Context
	Handler GETUserHandler
}

func (o *GETUser) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGETUserParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
