package providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// LISTProvidersHandlerFunc turns a function with the right signature into a l i s t providers handler
type LISTProvidersHandlerFunc func(LISTProvidersParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LISTProvidersHandlerFunc) Handle(params LISTProvidersParams) middleware.Responder {
	return fn(params)
}

// LISTProvidersHandler interface for that can handle valid l i s t providers params
type LISTProvidersHandler interface {
	Handle(LISTProvidersParams) middleware.Responder
}

// NewLISTProviders creates a new http.Handler for the l i s t providers operation
func NewLISTProviders(ctx *middleware.Context, handler LISTProvidersHandler) *LISTProviders {
	return &LISTProviders{Context: ctx, Handler: handler}
}

/*LISTProviders swagger:route GET /providers Providers lISTProviders

List Providers

*/
type LISTProviders struct {
	Context *middleware.Context
	Handler LISTProvidersHandler
}

func (o *LISTProviders) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewLISTProvidersParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
