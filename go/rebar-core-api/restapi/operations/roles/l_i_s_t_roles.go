package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// LISTRolesHandlerFunc turns a function with the right signature into a l i s t roles handler
type LISTRolesHandlerFunc func(LISTRolesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LISTRolesHandlerFunc) Handle(params LISTRolesParams) middleware.Responder {
	return fn(params)
}

// LISTRolesHandler interface for that can handle valid l i s t roles params
type LISTRolesHandler interface {
	Handle(LISTRolesParams) middleware.Responder
}

// NewLISTRoles creates a new http.Handler for the l i s t roles operation
func NewLISTRoles(ctx *middleware.Context, handler LISTRolesHandler) *LISTRoles {
	return &LISTRoles{Context: ctx, Handler: handler}
}

/*LISTRoles swagger:route GET /roles Roles lISTRoles

List Roles

*/
type LISTRoles struct {
	Context *middleware.Context
	Handler LISTRolesHandler
}

func (o *LISTRoles) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewLISTRolesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
