package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PATCHNodeReader is a Reader for the PATCHNode structure.
type PATCHNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PATCHNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	default:
		result := NewPATCHNodeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPATCHNodeDefault creates a PATCHNodeDefault with default headers values
func NewPATCHNodeDefault(code int) *PATCHNodeDefault {
	return &PATCHNodeDefault{
		_statusCode: code,
	}
}

/*PATCHNodeDefault handles this case with default header values.

PATCHNodeDefault p a t c h node default
*/
type PATCHNodeDefault struct {
	_statusCode int

	Payload PATCHNodeDefaultBody
}

// Code gets the status code for the p a t c h node default response
func (o *PATCHNodeDefault) Code() int {
	return o._statusCode
}

func (o *PATCHNodeDefault) Error() string {
	return fmt.Sprintf("[PATCH /nodes][%d] PATCH-node default  %+v", o._statusCode, o.Payload)
}

func (o *PATCHNodeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PATCHNodeDefaultBody p a t c h node default body
swagger:model PATCHNodeDefaultBody
*/
type PATCHNodeDefaultBody interface{}
