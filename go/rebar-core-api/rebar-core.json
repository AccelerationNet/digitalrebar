{
    "swagger": "2.0",
    "info": {
        "version": "1",
        "title": "Rebar Core",
        "description": "Digital Rebar Core API"
    },
    "basePath": "/api/v1",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json",
        "application/javascript"
    ],
    "produces": [
        "application/json",
        "application/javascript"
    ],
    "securityDefinitions": {
        "Authorization": {
            "name": "Authorization",
            "type": "apiKey",
            "in": "header"
        },
        "auth_token": {
            "name": "auth_token",
            "type": "apiKey",
            "in": "query"
        }
    },
    "paths": {
        "/users/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-user",
                "summary": "Get User",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/user-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-user",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-user",
                "summary": "Update User",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/user-input",
                            "example": {
                                "id": 3,
                                "uuid": "fc16ab26-09d8-40c2-beb0-b9349d9728a2",
                                "username": "machine-install",
                                "email": "root@localhost.localdomain",
                                "is_admin": false,
                                "tenant_id": 1,
                                "current_tenant_id": 1,
                                "locked": false,
                                "created_at": "2016-10-25T22:04:45.622Z",
                                "updated_at": "2016-10-25T22:04:45.691Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/user-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-user",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-user",
                "summary": "Delete User",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-user",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/users": {
            "get": {
                "operationId": "LIST-users",
                "summary": "List Users",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-users",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-user",
                "summary": "Create User",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/user-input",
                            "example": {
                                "id": 3,
                                "uuid": "fc16ab26-09d8-40c2-beb0-b9349d9728a2",
                                "username": "machine-install",
                                "email": "root@localhost.localdomain",
                                "is_admin": false,
                                "tenant_id": 1,
                                "current_tenant_id": 1,
                                "locked": false,
                                "created_at": "2016-10-25T22:04:45.622Z",
                                "updated_at": "2016-10-25T22:04:45.691Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/user-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-user",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/usertenantcapabilities/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-usertenantcapability",
                "summary": "Get UserTenantCapability",
                "tags": [
                    "Usertenantcapabilities"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/usertenantcapability-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-usertenantcapability",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-usertenantcapability",
                "summary": "Update UserTenantCapability",
                "tags": [
                    "Usertenantcapabilities"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/usertenantcapability-input",
                            "example": {
                                "id": 3,
                                "uuid": "8189551a-f5bb-495a-8cfe-ab49fec8e0cc",
                                "user_id": 3,
                                "tenant_id": 1,
                                "capability_id": 3,
                                "created_at": "2016-10-25T22:04:48.061Z",
                                "updated_at": "2016-10-25T22:04:48.061Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/usertenantcapability-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-usertenantcapability",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-usertenantcapability",
                "summary": "Delete UserTenantCapability",
                "tags": [
                    "Usertenantcapabilities"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-usertenantcapability",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/usertenantcapabilities": {
            "get": {
                "operationId": "LIST-usertenantcapabilities",
                "summary": "List Usertenantcapabilities",
                "tags": [
                    "Usertenantcapabilities"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/usertenantcapability-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-usertenantcapabilities",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-usertenantcapability",
                "summary": "Create UserTenantCapability",
                "tags": [
                    "Usertenantcapabilities"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/usertenantcapability-input",
                            "example": {
                                "id": 3,
                                "uuid": "8189551a-f5bb-495a-8cfe-ab49fec8e0cc",
                                "user_id": 3,
                                "tenant_id": 1,
                                "capability_id": 3,
                                "created_at": "2016-10-25T22:04:48.061Z",
                                "updated_at": "2016-10-25T22:04:48.061Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/usertenantcapability-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-usertenantcapability",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/tenants/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-tenant",
                "summary": "Get Tenant",
                "tags": [
                    "Tenants"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/tenant-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-tenant",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-tenant",
                "summary": "Update Tenant",
                "tags": [
                    "Tenants"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/tenant-input",
                            "example": {
                                "id": 1,
                                "uuid": "0e58fce1-ae25-4a43-ae94-f6d36b328614",
                                "name": "system",
                                "description": "Global System Tenant",
                                "parent_id": 0,
                                "created_at": "2016-10-25T22:04:07.347Z",
                                "updated_at": "2016-10-25T22:04:07.347Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/tenant-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-tenant",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-tenant",
                "summary": "Delete Tenant",
                "tags": [
                    "Tenants"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-tenant",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/tenants": {
            "get": {
                "operationId": "LIST-tenants",
                "summary": "List Tenants",
                "tags": [
                    "Tenants"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tenant-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-tenants",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-tenant",
                "summary": "Create Tenant",
                "tags": [
                    "Tenants"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/tenant-input",
                            "example": {
                                "id": 1,
                                "uuid": "0e58fce1-ae25-4a43-ae94-f6d36b328614",
                                "name": "system",
                                "description": "Global System Tenant",
                                "parent_id": 0,
                                "created_at": "2016-10-25T22:04:07.347Z",
                                "updated_at": "2016-10-25T22:04:07.347Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/tenant-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-tenant",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/providers/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-provider",
                "summary": "Get Provider",
                "tags": [
                    "Providers"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/provider-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-provider",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-provider",
                "summary": "Update Provider",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/provider-input",
                            "example": {
                                "id": 1,
                                "uuid": "9f901155-d535-4c8d-9217-156384cbad1f",
                                "name": "metal",
                                "description": "Provide basic node services for bare-metal nodes.",
                                "auth_details": {},
                                "type": "MetalProvider",
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:05:02.302Z",
                                "updated_at": "2016-10-25T22:05:02.302Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/provider-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-provider",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-provider",
                "summary": "Delete Provider",
                "tags": [
                    "Providers"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-provider",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "operationId": "LIST-providers",
                "summary": "List Providers",
                "tags": [
                    "Providers"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/provider-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-providers",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-provider",
                "summary": "Create Provider",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/provider-input",
                            "example": {
                                "id": 1,
                                "uuid": "9f901155-d535-4c8d-9217-156384cbad1f",
                                "name": "metal",
                                "description": "Provide basic node services for bare-metal nodes.",
                                "auth_details": {},
                                "type": "MetalProvider",
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:05:02.302Z",
                                "updated_at": "2016-10-25T22:05:02.302Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/provider-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-provider",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/noderoles/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-noderole",
                "summary": "Get NodeRole",
                "tags": [
                    "Noderoles"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/noderole-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-noderole",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-noderole",
                "summary": "Update NodeRole",
                "tags": [
                    "Noderoles"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/noderole-input",
                            "example": {
                                "id": 3,
                                "uuid": "5e74d17f-176f-4af6-997a-c1cd56f7723d",
                                "deployment_id": 1,
                                "role_id": 25,
                                "node_id": 1,
                                "state": 0,
                                "status": "",
                                "runlog": "",
                                "available": true,
                                "order": 10000,
                                "node_error": false,
                                "cohort": 0,
                                "run_count": 1,
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:05:38.582Z",
                                "updated_at": "2016-10-25T22:05:53.755Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/noderole-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-noderole",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-noderole",
                "summary": "Delete NodeRole",
                "tags": [
                    "Noderoles"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-noderole",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/noderoles": {
            "get": {
                "operationId": "LIST-noderoles",
                "summary": "List Noderoles",
                "tags": [
                    "Noderoles"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/noderole-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-noderoles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-noderole",
                "summary": "Create NodeRole",
                "tags": [
                    "Noderoles"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/noderole-input",
                            "example": {
                                "id": 3,
                                "uuid": "5e74d17f-176f-4af6-997a-c1cd56f7723d",
                                "deployment_id": 1,
                                "role_id": 25,
                                "node_id": 1,
                                "state": 0,
                                "status": "",
                                "runlog": "",
                                "available": true,
                                "order": 10000,
                                "node_error": false,
                                "cohort": 0,
                                "run_count": 1,
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:05:38.582Z",
                                "updated_at": "2016-10-25T22:05:53.755Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/noderole-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-noderole",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/networks/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-network",
                "summary": "Get Network",
                "tags": [
                    "Networks"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/network-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-network",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-network",
                "summary": "Update Network",
                "tags": [
                    "Networks"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/network-input",
                            "example": {
                                "id": 1,
                                "uuid": "17d15fab-7956-44e5-97a6-69f22d63d7e8",
                                "name": "admin-rack",
                                "deployment_id": 1,
                                "vlan": 0,
                                "team_mode": 5,
                                "use_team": false,
                                "use_vlan": false,
                                "use_bridge": false,
                                "configure": true,
                                "description": "",
                                "v6prefix": "fc45:f789:8ecd:0001",
                                "conduit": "dhcp",
                                "category": "admin",
                                "group": "rack",
                                "pbr": null,
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:06:29.659Z",
                                "updated_at": "2016-10-25T22:06:29.659Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/network-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-network",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-network",
                "summary": "Delete Network",
                "tags": [
                    "Networks"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-network",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/networks": {
            "get": {
                "operationId": "LIST-networks",
                "summary": "List Networks",
                "tags": [
                    "Networks"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/network-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-networks",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-network",
                "summary": "Create Network",
                "tags": [
                    "Networks"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/network-input",
                            "example": {
                                "id": 1,
                                "uuid": "17d15fab-7956-44e5-97a6-69f22d63d7e8",
                                "name": "admin-rack",
                                "deployment_id": 1,
                                "vlan": 0,
                                "team_mode": 5,
                                "use_team": false,
                                "use_vlan": false,
                                "use_bridge": false,
                                "configure": true,
                                "description": "",
                                "v6prefix": "fc45:f789:8ecd:0001",
                                "conduit": "dhcp",
                                "category": "admin",
                                "group": "rack",
                                "pbr": "",
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:06:29.659Z",
                                "updated_at": "2016-10-25T22:06:29.659Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/network-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-network",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/networkrouters/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-networkrouter",
                "summary": "Get NetworkRouter",
                "tags": [
                    "Networkrouters"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/networkrouter-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-networkrouter",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-networkrouter",
                "summary": "Update NetworkRouter",
                "tags": [
                    "Networkrouters"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/networkrouter-input",
                            "example": {
                                "id": 1,
                                "uuid": "7f034bea-68fc-4ca5-b2b2-c57c6e5f029a",
                                "address": "192.168.0.2/23",
                                "network_id": 1,
                                "tenant_id": 1,
                                "pref": 10,
                                "created_at": "2016-10-25T22:06:29.738Z",
                                "updated_at": "2016-10-25T22:06:29.738Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/networkrouter-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-networkrouter",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-networkrouter",
                "summary": "Delete NetworkRouter",
                "tags": [
                    "Networkrouters"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-networkrouter",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/networkrouters": {
            "get": {
                "operationId": "LIST-networkrouters",
                "summary": "List Networkrouters",
                "tags": [
                    "Networkrouters"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/networkrouter-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-networkrouters",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-networkrouter",
                "summary": "Create NetworkRouter",
                "tags": [
                    "Networkrouters"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/networkrouter-input",
                            "example": {
                                "id": 1,
                                "uuid": "7f034bea-68fc-4ca5-b2b2-c57c6e5f029a",
                                "address": "192.168.0.2/23",
                                "network_id": 1,
                                "tenant_id": 1,
                                "pref": 10,
                                "created_at": "2016-10-25T22:06:29.738Z",
                                "updated_at": "2016-10-25T22:06:29.738Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/networkrouter-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-networkrouter",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/networkranges/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-networkrange",
                "summary": "Get NetworkRange",
                "tags": [
                    "Networkranges"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/networkrange-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-networkrange",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-networkrange",
                "summary": "Update NetworkRange",
                "tags": [
                    "Networkranges"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/networkrange-input",
                            "example": {
                                "id": 1,
                                "uuid": "c8ec17ee-4ba9-4c94-8fb4-01008c970215",
                                "network_id": 1,
                                "vlan": 0,
                                "team_mode": 5,
                                "use_team": false,
                                "use_vlan": false,
                                "use_bridge": false,
                                "overlap": false,
                                "conduit": "dhcp",
                                "first": "fc45:f789:8ecd:1::1/64",
                                "last": "fc45:f789:8ecd:1:ffff:ffff:ffff:fffe/64",
                                "name": "host-v6",
                                "tenant_id": 1,
                                "anon_lease_time": 60,
                                "bound_lease_time": 2592000,
                                "allow_anon_leases": false,
                                "allow_bound_leases": false,
                                "created_at": "2016-10-25T22:06:29.706Z",
                                "updated_at": "2016-10-25T22:06:29.706Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/networkrange-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-networkrange",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-networkrange",
                "summary": "Delete NetworkRange",
                "tags": [
                    "Networkranges"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-networkrange",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/networkranges": {
            "get": {
                "operationId": "LIST-networkranges",
                "summary": "List Networkranges",
                "tags": [
                    "Networkranges"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/networkrange-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-networkranges",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-networkrange",
                "summary": "Create NetworkRange",
                "tags": [
                    "Networkranges"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/networkrange-input",
                            "example": {
                                "id": 1,
                                "uuid": "c8ec17ee-4ba9-4c94-8fb4-01008c970215",
                                "network_id": 1,
                                "vlan": 0,
                                "team_mode": 5,
                                "use_team": false,
                                "use_vlan": false,
                                "use_bridge": false,
                                "overlap": false,
                                "conduit": "dhcp",
                                "first": "fc45:f789:8ecd:1::1/64",
                                "last": "fc45:f789:8ecd:1:ffff:ffff:ffff:fffe/64",
                                "name": "host-v6",
                                "tenant_id": 1,
                                "anon_lease_time": 60,
                                "bound_lease_time": 2592000,
                                "allow_anon_leases": false,
                                "allow_bound_leases": false,
                                "created_at": "2016-10-25T22:06:29.706Z",
                                "updated_at": "2016-10-25T22:06:29.706Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/networkrange-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-networkrange",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/networkallocations/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-networkallocation",
                "summary": "Get NetworkAllocation",
                "tags": [
                    "Networkallocations"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/networkallocation-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-networkallocation",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-networkallocation",
                "summary": "Update NetworkAllocation",
                "tags": [
                    "Networkallocations"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/networkallocation-input",
                            "example": {
                                "id": 3,
                                "uuid": "ae2ede5b-a3ea-496e-a024-41fdf9f36394",
                                "address": "192.168.1.32/23",
                                "node_id": 3,
                                "network_id": 1,
                                "network_range_id": 3,
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:15:28.162Z",
                                "updated_at": "2016-10-25T22:15:28.162Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/networkallocation-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-networkallocation",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-networkallocation",
                "summary": "Delete NetworkAllocation",
                "tags": [
                    "Networkallocations"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-networkallocation",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/networkallocations": {
            "get": {
                "operationId": "LIST-networkallocations",
                "summary": "List Networkallocations",
                "tags": [
                    "Networkallocations"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/networkallocation-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-networkallocations",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-networkallocation",
                "summary": "Create NetworkAllocation",
                "tags": [
                    "Networkallocations"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/networkallocation-input",
                            "example": {
                                "id": 3,
                                "uuid": "ae2ede5b-a3ea-496e-a024-41fdf9f36394",
                                "address": "192.168.1.32/23",
                                "node_id": 3,
                                "network_id": 1,
                                "network_range_id": 3,
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:15:28.162Z",
                                "updated_at": "2016-10-25T22:15:28.162Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/networkallocation-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-networkallocation",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/jigs/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-jig",
                "summary": "Get Jig",
                "tags": [
                    "Jigs"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/jig-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-jig",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-jig",
                "summary": "Update Jig",
                "tags": [
                    "Jigs"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/jig-input",
                            "example": {
                                "id": 4,
                                "uuid": "353f3064-8ef4-45b2-ae4d-6f9f8db25306",
                                "name": "chef",
                                "description": "Allow Rebar to manage nodes using Chef",
                                "active": true,
                                "client_role_name": "chef-client",
                                "server": "https://192.168.0.2:4646",
                                "client_name": "rebar",
                                "key": "/home/rebar/.chef/rebar.pem",
                                "created_at": "2016-10-25T22:04:55.592Z",
                                "updated_at": "2016-10-25T22:06:09.524Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/jig-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-jig",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-jig",
                "summary": "Delete Jig",
                "tags": [
                    "Jigs"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-jig",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/jigs": {
            "get": {
                "operationId": "LIST-jigs",
                "summary": "List Jigs",
                "tags": [
                    "Jigs"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jig-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-jigs",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-jig",
                "summary": "Create Jig",
                "tags": [
                    "Jigs"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/jig-input",
                            "example": {
                                "id": 4,
                                "uuid": "353f3064-8ef4-45b2-ae4d-6f9f8db25306",
                                "name": "chef",
                                "description": "Allow Rebar to manage nodes using Chef",
                                "active": true,
                                "client_role_name": "chef-client",
                                "server": "https://192.168.0.2:4646",
                                "client_name": "rebar",
                                "key": "/home/rebar/.chef/rebar.pem",
                                "created_at": "2016-10-25T22:04:55.592Z",
                                "updated_at": "2016-10-25T22:06:09.524Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/jig-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-jig",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/hammers/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-hammer",
                "summary": "Get Hammer",
                "tags": [
                    "Hammers"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/hammer-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-hammer",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-hammer",
                "summary": "Update Hammer",
                "tags": [
                    "Hammers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/hammer-input",
                            "example": {
                                "id": 1,
                                "uuid": "2469ae9b-9a10-41a0-9a33-6883741c07d3",
                                "name": "ssh",
                                "node_id": 2,
                                "available_hammer_id": 1,
                                "priority": 0,
                                "endpoint": null,
                                "username": "root",
                                "authenticator": null,
                                "actions": {
                                    "power": [
                                        "reboot"
                                    ],
                                    "xfer": [
                                        "copy_from",
                                        "copy_to"
                                    ],
                                    "run": [
                                        "run"
                                    ]
                                },
                                "created_at": null,
                                "updated_at": null
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/hammer-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-hammer",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-hammer",
                "summary": "Delete Hammer",
                "tags": [
                    "Hammers"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-hammer",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/hammers": {
            "get": {
                "operationId": "LIST-hammers",
                "summary": "List Hammers",
                "tags": [
                    "Hammers"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/hammer-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-hammers",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-hammer",
                "summary": "Create Hammer",
                "tags": [
                    "Hammers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/hammer-input",
                            "example": {
                                "id": 1,
                                "uuid": "2469ae9b-9a10-41a0-9a33-6883741c07d3",
                                "name": "ssh",
                                "node_id": 2,
                                "available_hammer_id": 1,
                                "priority": 0,
                                "endpoint": null,
                                "username": "root",
                                "authenticator": null,
                                "actions": {
                                    "power": [
                                        "reboot"
                                    ],
                                    "xfer": [
                                        "copy_from",
                                        "copy_to"
                                    ],
                                    "run": [
                                        "run"
                                    ]
                                },
                                "created_at": null,
                                "updated_at": null
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/hammer-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-hammer",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/dnsnamefilters/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-dnsnamefilters",
                "summary": "Get DNSNameFilters",
                "tags": [
                    "Dnsnamefilters"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dnsnamefilters-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-dnsnamefilters",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-dnsnamefilters",
                "summary": "Update DNSNameFilters",
                "tags": [
                    "Dnsnamefilters"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dnsnamefilters-input",
                            "example": {
                                "id": 1,
                                "uuid": "a40ebf92-5a74-4773-8171-0b62ff91a55a",
                                "name": "default",
                                "matcher": "net.category == \"admin\"",
                                "priority": 50,
                                "service": "system",
                                "template": "{{node.name}}.local.neode.org",
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:06:34.795Z",
                                "updated_at": "2016-10-25T22:06:34.795Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dnsnamefilters-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-dnsnamefilters",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-dnsnamefilters",
                "summary": "Delete DNSNameFilters",
                "tags": [
                    "Dnsnamefilters"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-dnsnamefilters",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/dnsnamefilters": {
            "get": {
                "operationId": "LIST-dnsnamefilters",
                "summary": "List Dnsnamefilters",
                "tags": [
                    "Dnsnamefilters"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dnsnamefilters-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-dnsnamefilters",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-dnsnamefilters",
                "summary": "Create DNSNameFilters",
                "tags": [
                    "Dnsnamefilters"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dnsnamefilters-input",
                            "example": {
                                "id": 1,
                                "uuid": "a40ebf92-5a74-4773-8171-0b62ff91a55a",
                                "name": "default",
                                "matcher": "net.category == \"admin\"",
                                "priority": 50,
                                "service": "system",
                                "template": "{{node.name}}.local.neode.org",
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:06:34.795Z",
                                "updated_at": "2016-10-25T22:06:34.795Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dnsnamefilters-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-dnsnamefilters",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/eventsinks/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-eventsink",
                "summary": "Get EventSink",
                "tags": [
                    "Eventsinks"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/eventsink-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-eventsink",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-eventsink",
                "summary": "Update EventSink",
                "tags": [
                    "Eventsinks"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/eventsink-input",
                            "example": {
                                "id": 2,
                                "uuid": "8c107776-20be-4a7f-a84b-989bef1954b7",
                                "endpoint": "inproc://role:chef-client/on_node_delete",
                                "username": "",
                                "authenticator": "",
                                "notes": "",
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:04:57.165Z",
                                "updated_at": "2016-10-25T22:04:57.165Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/eventsink-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-eventsink",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-eventsink",
                "summary": "Delete EventSink",
                "tags": [
                    "Eventsinks"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-eventsink",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/eventsinks": {
            "get": {
                "operationId": "LIST-eventsinks",
                "summary": "List Eventsinks",
                "tags": [
                    "Eventsinks"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/eventsink-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-eventsinks",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-eventsink",
                "summary": "Create EventSink",
                "tags": [
                    "Eventsinks"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/eventsink-input",
                            "example": {
                                "id": 2,
                                "uuid": "8c107776-20be-4a7f-a84b-989bef1954b7",
                                "endpoint": "inproc://role:chef-client/on_node_delete",
                                "username": "",
                                "authenticator": "",
                                "notes": "",
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:04:57.165Z",
                                "updated_at": "2016-10-25T22:04:57.165Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/eventsink-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-eventsink",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/eventselectors/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-eventselector",
                "summary": "Get EventSelector",
                "tags": [
                    "Eventselectors"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/eventselector-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-eventselector",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-eventselector",
                "summary": "Update EventSelector",
                "tags": [
                    "Eventselectors"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/eventselector-input",
                            "example": {
                                "id": 1,
                                "uuid": "2be67739-9a02-4d86-aaca-ac83af0e4f60",
                                "event_sink_id": 2,
                                "tenant_id": 1,
                                "selector": {
                                    "event": "on_node_delete",
                                    "obj_class": "role",
                                    "obj_id": "chef-client"
                                },
                                "created_at": "2016-10-25T22:04:57.181Z",
                                "updated_at": "2016-10-25T22:04:57.181Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/eventselector-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-eventselector",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-eventselector",
                "summary": "Delete EventSelector",
                "tags": [
                    "Eventselectors"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-eventselector",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/eventselectors": {
            "get": {
                "operationId": "LIST-eventselectors",
                "summary": "List Eventselectors",
                "tags": [
                    "Eventselectors"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/eventselector-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-eventselectors",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-eventselector",
                "summary": "Create EventSelector",
                "tags": [
                    "Eventselectors"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/eventselector-input",
                            "example": {
                                "id": 1,
                                "uuid": "2be67739-9a02-4d86-aaca-ac83af0e4f60",
                                "event_sink_id": 2,
                                "tenant_id": 1,
                                "selector": {
                                    "event": "on_node_delete",
                                    "obj_class": "role",
                                    "obj_id": "chef-client"
                                },
                                "created_at": "2016-10-25T22:04:57.181Z",
                                "updated_at": "2016-10-25T22:04:57.181Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/eventselector-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-eventselector",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/dnsnameentries/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-dnsnameentries",
                "summary": "Get DNSNameEntries",
                "tags": [
                    "Dnsnameentries"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dnsnameentries-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-dnsnameentries",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-dnsnameentries",
                "summary": "Update DNSNameEntries",
                "tags": [
                    "Dnsnameentries"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dnsnameentries-input",
                            "example": {
                                "id": 1,
                                "uuid": "0aa3689a-9456-44d6-9dde-3b2fd10c678a",
                                "name": "phxhdc9dn0029.local.neode.org",
                                "network_allocation_id": 1,
                                "dns_name_filter_id": 1,
                                "rr_type": "A",
                                "tenant_id": 1,
                                "created_at": null,
                                "updated_at": null
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dnsnameentries-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-dnsnameentries",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-dnsnameentries",
                "summary": "Delete DNSNameEntries",
                "tags": [
                    "Dnsnameentries"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-dnsnameentries",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/dnsnameentries": {
            "get": {
                "operationId": "LIST-dnsnameentries",
                "summary": "List Dnsnameentries",
                "tags": [
                    "Dnsnameentries"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dnsnameentries-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-dnsnameentries",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-dnsnameentries",
                "summary": "Create DNSNameEntries",
                "tags": [
                    "Dnsnameentries"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dnsnameentries-input",
                            "example": {
                                "id": 1,
                                "uuid": "0aa3689a-9456-44d6-9dde-3b2fd10c678a",
                                "name": "phxhdc9dn0029.local.neode.org",
                                "network_allocation_id": 1,
                                "dns_name_filter_id": 1,
                                "rr_type": "A",
                                "tenant_id": 1,
                                "created_at": null,
                                "updated_at": null
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dnsnameentries-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-dnsnameentries",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/deployments/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-deployments",
                "summary": "Get Deployments",
                "tags": [
                    "Deployments"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/deployments-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-deployments",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-deployments",
                "summary": "Update Deployments",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/deployments-input",
                            "example": {
                                "id": 2,
                                "uuid": "2cd67d10-4deb-4d8b-9ef5-69a23974813a",
                                "name": "rack2-48",
                                "state": 2,
                                "description": "",
                                "system": false,
                                "parent_id": 1,
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:32:13.421Z",
                                "updated_at": "2016-10-25T22:38:08.518Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/deployments-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-deployments",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-deployments",
                "summary": "Delete Deployments",
                "tags": [
                    "Deployments"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-deployments",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/deployments": {
            "get": {
                "operationId": "LIST-deployments",
                "summary": "List Deployments",
                "tags": [
                    "Deployments"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/deployments-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-deployments",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-deployments",
                "summary": "Create Deployments",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/deployments-input",
                            "example": {
                                "id": 2,
                                "uuid": "2cd67d10-4deb-4d8b-9ef5-69a23974813a",
                                "name": "rack2-48",
                                "state": 2,
                                "description": "",
                                "system": false,
                                "parent_id": 1,
                                "tenant_id": 1,
                                "created_at": "2016-10-25T22:32:13.421Z",
                                "updated_at": "2016-10-25T22:38:08.518Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/deployments-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-deployments",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/deploymentroles/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-deploymentroles",
                "summary": "Get Deploymentroles",
                "tags": [
                    "Deploymentroles"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/deploymentroles-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-deploymentroles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-deploymentroles",
                "summary": "Update Deploymentroles",
                "tags": [
                    "Deploymentroles"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/deploymentroles-input",
                            "example": {
                                "id": 4,
                                "uuid": "e5f7d388-b5e2-4527-a39d-e284f103dda2",
                                "deployment_id": 1,
                                "role_id": 29,
                                "created_at": "2016-10-25T22:05:39.015Z",
                                "updated_at": "2016-10-25T22:05:45.678Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/deploymentroles-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-deploymentroles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-deploymentroles",
                "summary": "Delete Deploymentroles",
                "tags": [
                    "Deploymentroles"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-deploymentroles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/deploymentroles": {
            "get": {
                "operationId": "LIST-deploymentroles",
                "summary": "List Deploymentroles",
                "tags": [
                    "Deploymentroles"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/deploymentroles-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-deploymentroles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-deploymentroles",
                "summary": "Create Deploymentroles",
                "tags": [
                    "Deploymentroles"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/deploymentroles-input",
                            "example": {
                                "id": 4,
                                "uuid": "e5f7d388-b5e2-4527-a39d-e284f103dda2",
                                "deployment_id": 1,
                                "role_id": 29,
                                "created_at": "2016-10-25T22:05:39.015Z",
                                "updated_at": "2016-10-25T22:05:45.678Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/deploymentroles-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-deploymentroles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/capabilities/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-capabilities",
                "summary": "Get Capabilities",
                "tags": [
                    "Capabilities"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/capabilities-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-capabilities",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-capabilities",
                "summary": "Update Capabilities",
                "tags": [
                    "Capabilities"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/capabilities-input",
                            "example": {
                                "id": 1,
                                "uuid": "6593eb72-d07e-4fe8-8027-6b92beef0331",
                                "name": "SUPERUSER",
                                "description": "Blanket authority do do everything",
                                "source": "bootstrap",
                                "created_at": "2016-10-25T22:04:07.324Z",
                                "updated_at": "2016-10-25T22:04:07.324Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/capabilities-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-capabilities",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-capabilities",
                "summary": "Delete Capabilities",
                "tags": [
                    "Capabilities"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-capabilities",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/capabilities": {
            "get": {
                "operationId": "LIST-capabilities",
                "summary": "List Capabilities",
                "tags": [
                    "Capabilities"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/capabilities-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-capabilities",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-capabilities",
                "summary": "Create Capabilities",
                "tags": [
                    "Capabilities"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/capabilities-input",
                            "example": {
                                "id": 1,
                                "uuid": "6593eb72-d07e-4fe8-8027-6b92beef0331",
                                "name": "SUPERUSER",
                                "description": "Blanket authority do do everything",
                                "source": "bootstrap",
                                "created_at": "2016-10-25T22:04:07.324Z",
                                "updated_at": "2016-10-25T22:04:07.324Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/capabilities-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-capabilities",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/availablehammers/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-availablehammers",
                "summary": "Get AvailableHammers",
                "tags": [
                    "Availablehammers"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/availablehammers-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-availablehammers",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-availablehammers",
                "summary": "Update AvailableHammers",
                "tags": [
                    "Availablehammers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/availablehammers-input",
                            "example": {
                                "created_at": "2016-10-25T22:05:06.093Z",
                                "id": 1,
                                "klass": "SecureShellHammer",
                                "name": "ssh",
                                "priority": 0,
                                "updated_at": "2016-10-25T22:05:06.093Z",
                                "uuid": "adcb794c-cc17-4e7e-93c2-23564225f142"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/availablehammers-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-availablehammers",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-availablehammers",
                "summary": "Delete AvailableHammers",
                "tags": [
                    "Availablehammers"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-availablehammers",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/availablehammers": {
            "get": {
                "operationId": "LIST-availablehammers",
                "summary": "List Availablehammers",
                "tags": [
                    "Availablehammers"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/availablehammers-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-availablehammers",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-availablehammers",
                "summary": "Create AvailableHammers",
                "tags": [
                    "Availablehammers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/availablehammers-input",
                            "example": {
                                "created_at": "2016-10-25T22:05:06.093Z",
                                "id": 1,
                                "klass": "SecureShellHammer",
                                "name": "ssh",
                                "priority": 0,
                                "updated_at": "2016-10-25T22:05:06.093Z",
                                "uuid": "adcb794c-cc17-4e7e-93c2-23564225f142"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/availablehammers-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-availablehammers",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/attribs/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-attrib",
                "summary": "Get Attrib",
                "tags": [
                    "Attribs"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/attrib-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-attrib",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-attrib",
                "summary": "Update Attrib",
                "tags": [
                    "Attribs"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/attrib-input",
                            "example": {
                                "id": 2,
                                "uuid": "d8da6f87-b95c-4149-95a8-11583ef4a2d5",
                                "name": "example-root-file",
                                "description": "Information about the root file",
                                "barclamp_id": 2,
                                "role_id": 2,
                                "type": null,
                                "writable": true,
                                "schema": {
                                    "mapping": {
                                        "=": {
                                            "type": "str"
                                        }
                                    },
                                    "type": "map"
                                },
                                "map": "cert/root",
                                "order": 10000,
                                "value": null,
                                "default": {
                                    "value": {
                                        "destination": "/etc/example-root.pem",
                                        "group": "root",
                                        "perm": "0600",
                                        "user": "root"
                                    }
                                },
                                "created_at": "2016-10-25T22:04:56.327Z",
                                "updated_at": "2016-10-25T22:04:56.339Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/attrib-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-attrib",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-attrib",
                "summary": "Delete Attrib",
                "tags": [
                    "Attribs"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-attrib",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/attribs": {
            "get": {
                "operationId": "LIST-attribs",
                "summary": "List Attribs",
                "tags": [
                    "Attribs"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/attrib-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-attribs",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-attrib",
                "summary": "Create Attrib",
                "tags": [
                    "Attribs"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/attrib-input",
                            "example": {
                                "id": 2,
                                "uuid": "d8da6f87-b95c-4149-95a8-11583ef4a2d5",
                                "name": "example-root-file",
                                "description": "Information about the root file",
                                "barclamp_id": 2,
                                "role_id": 2,
                                "type": null,
                                "writable": true,
                                "schema": {
                                    "mapping": {
                                        "=": {
                                            "type": "str"
                                        }
                                    },
                                    "type": "map"
                                },
                                "map": "cert/root",
                                "order": 10000,
                                "value": null,
                                "default": {
                                    "value": {
                                        "destination": "/etc/example-root.pem",
                                        "group": "root",
                                        "perm": "0600",
                                        "user": "root"
                                    }
                                },
                                "created_at": "2016-10-25T22:04:56.327Z",
                                "updated_at": "2016-10-25T22:04:56.339Z"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/attrib-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-attrib",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/barclamps/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-barclamp",
                "summary": "Get Barclamp",
                "tags": [
                    "Barclamps"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/barclamp-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-barclamp",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-barclamp",
                "summary": "Update Barclamp",
                "tags": [
                    "Barclamps"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/barclamp-input",
                            "example": {
                                "barclamp_id": 1,
                                "build_on": null,
                                "build_version": "0.0",
                                "cfg_data": {
                                    "barclamp": {
                                        "description": "Core DigitalRebar functionality",
                                        "display": "Core",
                                        "license": "Apache 2",
                                        "license_url": "https://github.com/digitalrebar/core/blob/develop/doc/licenses/README.md",
                                        "name": "core",
                                        "source_path": "/opt/digitalrebar/core",
                                        "source_url": "https://github.com/digitalrebar/core",
                                        "version": "2.E"
                                    },
                                    "jigs": [
                                        {
                                            "class": "BarclampRebar::Jig",
                                            "description": "Run arbitrary scripts on nodes via SSH",
                                            "name": "script"
                                        },
                                        {
                                            "class": "NoopJig",
                                            "description": "Jig used when roles have no action to run",
                                            "name": "noop"
                                        },
                                        {
                                            "class": "BarclampTest::Jig",
                                            "description": "Test jig for exercising jig and noderole operations.",
                                            "name": "test"
                                        },
                                        {
                                            "class": "BarclampChef::Jig",
                                            "description": "Allow Rebar to manage nodes using Chef",
                                            "implementor": "chef-client",
                                            "name": "chef"
                                        },
                                        {
                                            "class": "BarclampChef::SoloJig",
                                            "description": "Allow Rebar to manage nodes using chef-solo",
                                            "implementor": "chef-solo",
                                            "name": "chef-solo"
                                        },
                                        {
                                            "class": "BarclampPuppet::SaJig",
                                            "description": "Puppet jig for using standalone puppet agent",
                                            "name": "puppet-sa"
                                        },
                                        {
                                            "class": "BarclampRebar::RoleProvidedJig",
                                            "description": "Jig that delegates back to a role-provided do_transition method",
                                            "name": "role-provided"
                                        },
                                        {
                                            "class": "BarclampRebar::AnsiblePlaybookJig",
                                            "description": "Allow Rebar to run an Ansible playbook against a node",
                                            "name": "ansible-playbook"
                                        },
                                        {
                                            "class": "BarclampRebar::AnsibleJig",
                                            "description": "Allow Rebar to run an Ansible command/module against a node",
                                            "name": "ansible"
                                        }
                                    ],
                                    "os_support": [
                                        "ubuntu-12.04",
                                        "ubuntu-14.04",
                                        "ubuntu-15.04",
                                        "redhat-6.5",
                                        "redhat-6.6",
                                        "redhat-6.7",
                                        "centos-6.5",
                                        "centos-6.6",
                                        "centos-6.7",
                                        "centos-7.1.1503",
                                        "opensuse-13.1",
                                        "fedora-20",
                                        "debian-7",
                                        "debian-8",
                                        "xenserver-6.5",
                                        "esxi-5.5",
                                        "fuel-6.0"
                                    ],
                                    "rebar": {
                                        "layout": 2
                                    }
                                },
                                "commit": null,
                                "created_at": "2016-10-25T22:04:55.457Z",
                                "description": "Core DigitalRebar functionality",
                                "id": 1,
                                "name": "core",
                                "source_path": "/opt/digitalrebar/core",
                                "source_url": "https://github.com/digitalrebar/core",
                                "updated_at": "2016-10-25T22:04:55.499Z",
                                "uuid": "686e747f-3078-4946-8288-a12ea4e1f175",
                                "version": 2
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/barclamp-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-barclamp",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-barclamp",
                "summary": "Delete Barclamp",
                "tags": [
                    "Barclamps"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-barclamp",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/barclamps": {
            "get": {
                "operationId": "LIST-barclamps",
                "summary": "List Barclamps",
                "tags": [
                    "Barclamps"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/barclamp-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-barclamps",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-barclamp",
                "summary": "Create Barclamp",
                "tags": [
                    "Barclamps"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/barclamp-input",
                            "example": {
                                "barclamp_id": 1,
                                "build_on": null,
                                "build_version": "0.0",
                                "cfg_data": {
                                    "barclamp": {
                                        "description": "Core DigitalRebar functionality",
                                        "display": "Core",
                                        "license": "Apache 2",
                                        "license_url": "https://github.com/digitalrebar/core/blob/develop/doc/licenses/README.md",
                                        "name": "core",
                                        "source_path": "/opt/digitalrebar/core",
                                        "source_url": "https://github.com/digitalrebar/core",
                                        "version": "2.E"
                                    },
                                    "jigs": [
                                        {
                                            "class": "BarclampRebar::Jig",
                                            "description": "Run arbitrary scripts on nodes via SSH",
                                            "name": "script"
                                        },
                                        {
                                            "class": "NoopJig",
                                            "description": "Jig used when roles have no action to run",
                                            "name": "noop"
                                        },
                                        {
                                            "class": "BarclampTest::Jig",
                                            "description": "Test jig for exercising jig and noderole operations.",
                                            "name": "test"
                                        },
                                        {
                                            "class": "BarclampChef::Jig",
                                            "description": "Allow Rebar to manage nodes using Chef",
                                            "implementor": "chef-client",
                                            "name": "chef"
                                        },
                                        {
                                            "class": "BarclampChef::SoloJig",
                                            "description": "Allow Rebar to manage nodes using chef-solo",
                                            "implementor": "chef-solo",
                                            "name": "chef-solo"
                                        },
                                        {
                                            "class": "BarclampPuppet::SaJig",
                                            "description": "Puppet jig for using standalone puppet agent",
                                            "name": "puppet-sa"
                                        },
                                        {
                                            "class": "BarclampRebar::RoleProvidedJig",
                                            "description": "Jig that delegates back to a role-provided do_transition method",
                                            "name": "role-provided"
                                        },
                                        {
                                            "class": "BarclampRebar::AnsiblePlaybookJig",
                                            "description": "Allow Rebar to run an Ansible playbook against a node",
                                            "name": "ansible-playbook"
                                        },
                                        {
                                            "class": "BarclampRebar::AnsibleJig",
                                            "description": "Allow Rebar to run an Ansible command/module against a node",
                                            "name": "ansible"
                                        }
                                    ],
                                    "os_support": [
                                        "ubuntu-12.04",
                                        "ubuntu-14.04",
                                        "ubuntu-15.04",
                                        "redhat-6.5",
                                        "redhat-6.6",
                                        "redhat-6.7",
                                        "centos-6.5",
                                        "centos-6.6",
                                        "centos-6.7",
                                        "centos-7.1.1503",
                                        "opensuse-13.1",
                                        "fedora-20",
                                        "debian-7",
                                        "debian-8",
                                        "xenserver-6.5",
                                        "esxi-5.5",
                                        "fuel-6.0"
                                    ],
                                    "rebar": {
                                        "layout": 2
                                    }
                                },
                                "commit": null,
                                "created_at": "2016-10-25T22:04:55.457Z",
                                "description": "Core DigitalRebar functionality",
                                "id": 1,
                                "name": "core",
                                "source_path": "/opt/digitalrebar/core",
                                "source_url": "https://github.com/digitalrebar/core",
                                "updated_at": "2016-10-25T22:04:55.499Z",
                                "uuid": "686e747f-3078-4946-8288-a12ea4e1f175",
                                "version": 2
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/barclamp-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-barclamp",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/roles/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-roles",
                "summary": "Get Roles",
                "tags": [
                    "Roles"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/roles-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-roles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": true,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-roles",
                "summary": "Update Roles",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/roles-input",
                            "example": {
                                "abstract": false,
                                "attribs": [
                                    "network-bmc-rack_use_bridge",
                                    "network-bmc-rack_use_team",
                                    "network-bmc-rack_use_vlan",
                                    "network-bmc-rack_team_mode",
                                    "network-bmc-rack_vlan",
                                    "network-bmc-rack_resolved_conduit",
                                    "network-bmc-rack_conduit",
                                    "network-bmc-rack_targets",
                                    "network-bmc-rack_addresses"
                                ],
                                "barclamp_id": 10,
                                "bootstrap": false,
                                "cluster": false,
                                "cohort": 1,
                                "conflicts": [],
                                "created_at": "2016-10-25T22:06:33.476Z",
                                "description": "Created Automatically by bmc-rack",
                                "destructive": false,
                                "discovery": false,
                                "icon": "device_hub",
                                "id": 134,
                                "implicit": true,
                                "jig_name": "noop",
                                "leaverunlog": false,
                                "library": false,
                                "metadata": {},
                                "milestone": true,
                                "name": "network-bmc-rack",
                                "powersave": false,
                                "preceeds": [],
                                "provides": [],
                                "replace_node_icon": false,
                                "requires": [
                                    "network-server"
                                ],
                                "service": false,
                                "updated_at": "2016-10-25T22:06:33.476Z",
                                "uuid": "aa85dfb9-3081-464a-b86c-e889654a23f0",
                                "wanted_attribs": [
                                    "network_interface_maps",
                                    "network-current-config",
                                    "network-wanted-config"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/roles-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-roles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-roles",
                "summary": "Delete Roles",
                "tags": [
                    "Roles"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-roles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "operationId": "LIST-roles",
                "summary": "List Roles",
                "tags": [
                    "Roles"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/roles-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-roles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-roles",
                "summary": "Create Roles",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/roles-input",
                            "example": {
                                "abstract": false,
                                "attribs": [
                                    "network-bmc-rack_use_bridge",
                                    "network-bmc-rack_use_team",
                                    "network-bmc-rack_use_vlan",
                                    "network-bmc-rack_team_mode",
                                    "network-bmc-rack_vlan",
                                    "network-bmc-rack_resolved_conduit",
                                    "network-bmc-rack_conduit",
                                    "network-bmc-rack_targets",
                                    "network-bmc-rack_addresses"
                                ],
                                "barclamp_id": 10,
                                "bootstrap": false,
                                "cluster": false,
                                "cohort": 1,
                                "conflicts": [],
                                "created_at": "2016-10-25T22:06:33.476Z",
                                "description": "Created Automatically by bmc-rack",
                                "destructive": false,
                                "discovery": false,
                                "icon": "device_hub",
                                "id": 134,
                                "implicit": true,
                                "jig_name": "noop",
                                "leaverunlog": false,
                                "library": false,
                                "metadata": {},
                                "milestone": true,
                                "name": "network-bmc-rack",
                                "powersave": false,
                                "preceeds": [],
                                "provides": [],
                                "replace_node_icon": false,
                                "requires": [
                                    "network-server"
                                ],
                                "service": false,
                                "updated_at": "2016-10-25T22:06:33.476Z",
                                "uuid": "aa85dfb9-3081-464a-b86c-e889654a23f0",
                                "wanted_attribs": [
                                    "network_interface_maps",
                                    "network-current-config",
                                    "network-wanted-config"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/roles-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-roles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/profiles/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-profile",
                "summary": "Get Profile",
                "tags": [
                    "Profiles"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "GET-profile",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-profile",
                "summary": "Update Profile",
                "tags": [
                    "Profiles"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/profile-input",
                            "example": {
                                "name": "pariatur",
                                "tenant_id": -19374921,
                                "values": {}
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/profile-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-profile",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-profile",
                "summary": "Delete Profile",
                "tags": [
                    "Profiles"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-profile",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/profiles": {
            "get": {
                "operationId": "LIST-profiles",
                "summary": "List Profiles",
                "tags": [
                    "Profiles"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/profile-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-profiles",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": true,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-profile",
                "summary": "Create Profile",
                "tags": [
                    "Profiles"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/profile-input",
                            "example": {
                                "name": "pariatur",
                                "tenant_id": -19374921,
                                "values": {}
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/profile-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-profile",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/nodes/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-node",
                "summary": "Get Node",
                "tags": [
                    "Nodes"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/node-output"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    },
                    {
                        "auth_token": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET-node",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-node",
                "summary": "Update Node",
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/node-input"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/node-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-node",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-node",
                "summary": "Delete Node",
                "tags": [
                    "Nodes"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-node",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/nodes": {
            "get": {
                "operationId": "LIST-nodes",
                "summary": "List Nodes",
                "tags": [
                    "Nodes"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/node-output"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-nodes",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-node",
                "summary": "Create Node",
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/node-input"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/node-output"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-node",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "patch": {
                "operationId": "PATCH-node",
                "summary": "Patch Nodes",
                "tags": [
                    "Nodes"
                ],
                "responses": {
                    "default": {
                        "description": "",
                        "schema": {}
                    }
                },
                "x-stoplight": {
                    "id": "PATCH-node",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        }
    },
    "definitions": {
        "node-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "format": "hostname"
                },
                "description": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "admin": {
                    "type": "boolean"
                },
                "target_role_id": {
                    "type": "integer"
                },
                "deployment_id": {
                    "type": "integer"
                },
                "provider_id": {
                    "type": "integer"
                },
                "variant": {
                    "type": "string"
                },
                "arch": {
                    "type": "string"
                },
                "os_family": {
                    "type": "string"
                },
                "discovery": {
                    "type": "object"
                },
                "hint": {
                    "type": "object"
                },
                "allocated": {
                    "type": "boolean"
                },
                "bootenv": {
                    "type": "string"
                },
                "quirks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "system": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "object"
                },
                "alive": {
                    "type": "boolean"
                },
                "node-control-address": {
                    "type": "string"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uuid": {
                    "type": "string",
                    "format": "uuid"
                },
                "icon": {
                    "type": "string"
                }
            },
            "x-stoplight": {
                "id": "node-input",
                "name": "Node Input",
                "public": true
            }
        },
        "node-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "required": [
                        "id"
                    ]
                },
                {
                    "$ref": "#/definitions/node-input"
                }
            ],
            "example": {
                "id": -59522530,
                "created_at": "5128-04-01T18:41:35.096Z",
                "updated_at": "3812-11-22T20:46:37.476Z"
            },
            "x-stoplight": {
                "id": "node-output",
                "name": "Node Output",
                "public": true
            }
        },
        "profile-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "values": {
                    "type": "object"
                }
            },
            "example": {
                "name": "pariatur",
                "tenant_id": -19374921,
                "values": {}
            },
            "x-stoplight": {
                "id": "profile-input",
                "name": "Profile Input",
                "public": true
            }
        },
        "profile-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "created_at": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "updated_at": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/profile-input"
                }
            ],
            "example": {
                "created_at": "nisi minim fugiat",
                "id": 9901498,
                "updated_at": "proident ea ipsum",
                "uuid": "aute",
                "name": "pariatur",
                "tenant_id": -19374921,
                "values": {}
            },
            "x-stoplight": {
                "id": "profile-output",
                "name": "Profile Output",
                "public": true
            }
        },
        "roles-input": {
            "type": "object",
            "properties": {
                "abstract": {
                    "type": "boolean"
                },
                "attribs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "barclamp_id": {
                    "type": "integer"
                },
                "bootstrap": {
                    "type": "boolean"
                },
                "cluster": {
                    "type": "boolean"
                },
                "cohort": {
                    "type": "integer"
                },
                "conflicts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "destructive": {
                    "type": "boolean"
                },
                "discovery": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "implicit": {
                    "type": "boolean"
                },
                "jig_name": {
                    "type": "string"
                },
                "leaverunlog": {
                    "type": "boolean"
                },
                "library": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object"
                },
                "milestone": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "powersave": {
                    "type": "boolean"
                },
                "preceeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provides": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "replace_node_icon": {
                    "type": "boolean"
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "type": "boolean"
                },
                "wanted_attribs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "example": {
                "abstract": false,
                "attribs": [
                    "network-bmc-rack_use_bridge",
                    "network-bmc-rack_use_team",
                    "network-bmc-rack_use_vlan",
                    "network-bmc-rack_team_mode",
                    "network-bmc-rack_vlan",
                    "network-bmc-rack_resolved_conduit",
                    "network-bmc-rack_conduit",
                    "network-bmc-rack_targets",
                    "network-bmc-rack_addresses"
                ],
                "barclamp_id": 10,
                "bootstrap": false,
                "cluster": false,
                "cohort": 1,
                "conflicts": [],
                "created_at": "2016-10-25T22:06:33.476Z",
                "description": "Created Automatically by bmc-rack",
                "destructive": false,
                "discovery": false,
                "icon": "device_hub",
                "id": 134,
                "implicit": true,
                "jig_name": "noop",
                "leaverunlog": false,
                "library": false,
                "metadata": {},
                "milestone": true,
                "name": "network-bmc-rack",
                "powersave": false,
                "preceeds": [],
                "provides": [],
                "replace_node_icon": false,
                "requires": [
                    "network-server"
                ],
                "service": false,
                "updated_at": "2016-10-25T22:06:33.476Z",
                "uuid": "aa85dfb9-3081-464a-b86c-e889654a23f0",
                "wanted_attribs": [
                    "network_interface_maps",
                    "network-current-config",
                    "network-wanted-config"
                ]
            },
            "x-stoplight": {
                "id": "roles-input",
                "name": "Roles Input",
                "public": true
            }
        },
        "roles-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "created_at": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "updated_at": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/roles-input"
                }
            ],
            "example": {
                "abstract": false,
                "attribs": [
                    "network-bmc-rack_use_bridge",
                    "network-bmc-rack_use_team",
                    "network-bmc-rack_use_vlan",
                    "network-bmc-rack_team_mode",
                    "network-bmc-rack_vlan",
                    "network-bmc-rack_resolved_conduit",
                    "network-bmc-rack_conduit",
                    "network-bmc-rack_targets",
                    "network-bmc-rack_addresses"
                ],
                "barclamp_id": 10,
                "bootstrap": false,
                "cluster": false,
                "cohort": 1,
                "conflicts": [],
                "created_at": "2016-10-25T22:06:33.476Z",
                "description": "Created Automatically by bmc-rack",
                "destructive": false,
                "discovery": false,
                "icon": "device_hub",
                "id": 134,
                "implicit": true,
                "jig_name": "noop",
                "leaverunlog": false,
                "library": false,
                "metadata": {},
                "milestone": true,
                "name": "network-bmc-rack",
                "powersave": false,
                "preceeds": [],
                "provides": [],
                "replace_node_icon": false,
                "requires": [
                    "network-server"
                ],
                "service": false,
                "updated_at": "2016-10-25T22:06:33.476Z",
                "uuid": "aa85dfb9-3081-464a-b86c-e889654a23f0",
                "wanted_attribs": [
                    "network_interface_maps",
                    "network-current-config",
                    "network-wanted-config"
                ]
            },
            "x-stoplight": {
                "id": "roles-output",
                "name": "Roles Output",
                "public": true
            }
        },
        "barclamp-input": {
            "type": "object",
            "properties": {
                "barclamp_id": {
                    "type": "integer"
                },
                "build_on": {
                    "type": "string"
		},
                "build_version": {
                    "type": "string"
                },
                "cfg_data": {
                    "type": "object",
                    "properties": {
                        "barclamp": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "display": {
                                    "type": "string"
                                },
                                "license": {
                                    "type": "string"
                                },
                                "license_url": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "source_path": {
                                    "type": "string"
                                },
                                "source_url": {
                                    "type": "string"
                                },
                                "version": {
                                    "type": "string"
                                }
                            }
                        },
                        "jigs": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "class": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "implementor": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "os_support": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "rebar": {
                            "type": "object",
                            "properties": {
                                "layout": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "commit": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source_path": {
                    "type": "string"
                },
                "source_url": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "example": {
                "barclamp_id": 1,
                "build_on": null,
                "build_version": "0.0",
                "cfg_data": {
                    "barclamp": {
                        "description": "Core DigitalRebar functionality",
                        "display": "Core",
                        "license": "Apache 2",
                        "license_url": "https://github.com/digitalrebar/core/blob/develop/doc/licenses/README.md",
                        "name": "core",
                        "source_path": "/opt/digitalrebar/core",
                        "source_url": "https://github.com/digitalrebar/core",
                        "version": "2.E"
                    },
                    "jigs": [
                        {
                            "class": "BarclampRebar::Jig",
                            "description": "Run arbitrary scripts on nodes via SSH",
                            "name": "script"
                        },
                        {
                            "class": "NoopJig",
                            "description": "Jig used when roles have no action to run",
                            "name": "noop"
                        },
                        {
                            "class": "BarclampTest::Jig",
                            "description": "Test jig for exercising jig and noderole operations.",
                            "name": "test"
                        },
                        {
                            "class": "BarclampChef::Jig",
                            "description": "Allow Rebar to manage nodes using Chef",
                            "implementor": "chef-client",
                            "name": "chef"
                        },
                        {
                            "class": "BarclampChef::SoloJig",
                            "description": "Allow Rebar to manage nodes using chef-solo",
                            "implementor": "chef-solo",
                            "name": "chef-solo"
                        },
                        {
                            "class": "BarclampPuppet::SaJig",
                            "description": "Puppet jig for using standalone puppet agent",
                            "name": "puppet-sa"
                        },
                        {
                            "class": "BarclampRebar::RoleProvidedJig",
                            "description": "Jig that delegates back to a role-provided do_transition method",
                            "name": "role-provided"
                        },
                        {
                            "class": "BarclampRebar::AnsiblePlaybookJig",
                            "description": "Allow Rebar to run an Ansible playbook against a node",
                            "name": "ansible-playbook"
                        },
                        {
                            "class": "BarclampRebar::AnsibleJig",
                            "description": "Allow Rebar to run an Ansible command/module against a node",
                            "name": "ansible"
                        }
                    ],
                    "os_support": [
                        "ubuntu-12.04",
                        "ubuntu-14.04",
                        "ubuntu-15.04",
                        "redhat-6.5",
                        "redhat-6.6",
                        "redhat-6.7",
                        "centos-6.5",
                        "centos-6.6",
                        "centos-6.7",
                        "centos-7.1.1503",
                        "opensuse-13.1",
                        "fedora-20",
                        "debian-7",
                        "debian-8",
                        "xenserver-6.5",
                        "esxi-5.5",
                        "fuel-6.0"
                    ],
                    "rebar": {
                        "layout": 2
                    }
                },
                "commit": null,
                "created_at": "2016-10-25T22:04:55.457Z",
                "description": "Core DigitalRebar functionality",
                "id": 1,
                "name": "core",
                "source_path": "/opt/digitalrebar/core",
                "source_url": "https://github.com/digitalrebar/core",
                "updated_at": "2016-10-25T22:04:55.499Z",
                "uuid": "686e747f-3078-4946-8288-a12ea4e1f175",
                "version": 2
            },
            "x-stoplight": {
                "id": "barclamp-input",
                "name": "Barclamp Input",
                "public": true
            }
        },
        "barclamp-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "created_at": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "updated_at": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/barclamp-input"
                }
            ],
            "example": {
                "barclamp_id": 1,
                "build_on": null,
                "build_version": "0.0",
                "cfg_data": {
                    "barclamp": {
                        "description": "Core DigitalRebar functionality",
                        "display": "Core",
                        "license": "Apache 2",
                        "license_url": "https://github.com/digitalrebar/core/blob/develop/doc/licenses/README.md",
                        "name": "core",
                        "source_path": "/opt/digitalrebar/core",
                        "source_url": "https://github.com/digitalrebar/core",
                        "version": "2.E"
                    },
                    "jigs": [
                        {
                            "class": "BarclampRebar::Jig",
                            "description": "Run arbitrary scripts on nodes via SSH",
                            "name": "script"
                        },
                        {
                            "class": "NoopJig",
                            "description": "Jig used when roles have no action to run",
                            "name": "noop"
                        },
                        {
                            "class": "BarclampTest::Jig",
                            "description": "Test jig for exercising jig and noderole operations.",
                            "name": "test"
                        },
                        {
                            "class": "BarclampChef::Jig",
                            "description": "Allow Rebar to manage nodes using Chef",
                            "implementor": "chef-client",
                            "name": "chef"
                        },
                        {
                            "class": "BarclampChef::SoloJig",
                            "description": "Allow Rebar to manage nodes using chef-solo",
                            "implementor": "chef-solo",
                            "name": "chef-solo"
                        },
                        {
                            "class": "BarclampPuppet::SaJig",
                            "description": "Puppet jig for using standalone puppet agent",
                            "name": "puppet-sa"
                        },
                        {
                            "class": "BarclampRebar::RoleProvidedJig",
                            "description": "Jig that delegates back to a role-provided do_transition method",
                            "name": "role-provided"
                        },
                        {
                            "class": "BarclampRebar::AnsiblePlaybookJig",
                            "description": "Allow Rebar to run an Ansible playbook against a node",
                            "name": "ansible-playbook"
                        },
                        {
                            "class": "BarclampRebar::AnsibleJig",
                            "description": "Allow Rebar to run an Ansible command/module against a node",
                            "name": "ansible"
                        }
                    ],
                    "os_support": [
                        "ubuntu-12.04",
                        "ubuntu-14.04",
                        "ubuntu-15.04",
                        "redhat-6.5",
                        "redhat-6.6",
                        "redhat-6.7",
                        "centos-6.5",
                        "centos-6.6",
                        "centos-6.7",
                        "centos-7.1.1503",
                        "opensuse-13.1",
                        "fedora-20",
                        "debian-7",
                        "debian-8",
                        "xenserver-6.5",
                        "esxi-5.5",
                        "fuel-6.0"
                    ],
                    "rebar": {
                        "layout": 2
                    }
                },
                "commit": null,
                "created_at": "2016-10-25T22:04:55.457Z",
                "description": "Core DigitalRebar functionality",
                "id": 1,
                "name": "core",
                "source_path": "/opt/digitalrebar/core",
                "source_url": "https://github.com/digitalrebar/core",
                "updated_at": "2016-10-25T22:04:55.499Z",
                "uuid": "686e747f-3078-4946-8288-a12ea4e1f175",
                "version": 2
            },
            "x-stoplight": {
                "id": "barclamp-output",
                "name": "Barclamp Output",
                "public": true
            }
        },
        "attrib-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "barclamp_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "writable": {
                    "type": "boolean"
                },
                "schema": {
                    "type": "object"
                },
                "map": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "value": {
                    "type": [
                        "string",
                        "array",
                        "number",
                        "integer",
                        "boolean"
                    ],
                    "items": {}
                },
                "default": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "object"
                        }
                    }
                }
            },
            "example": {
                "id": 2,
                "uuid": "d8da6f87-b95c-4149-95a8-11583ef4a2d5",
                "name": "example-root-file",
                "description": "Information about the root file",
                "barclamp_id": 2,
                "role_id": 2,
                "type": null,
                "writable": true,
                "schema": {
                    "mapping": {
                        "=": {
                            "type": "str"
                        }
                    },
                    "type": "map"
                },
                "map": "cert/root",
                "order": 10000,
                "value": null,
                "default": {
                    "value": {
                        "destination": "/etc/example-root.pem",
                        "group": "root",
                        "perm": "0600",
                        "user": "root"
                    }
                },
                "created_at": "2016-10-25T22:04:56.327Z",
                "updated_at": "2016-10-25T22:04:56.339Z"
            },
            "x-stoplight": {
                "id": "attrib-input",
                "name": "Attrib Input",
                "public": true
            }
        },
        "attrib-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/attrib-input"
                }
            ],
            "example": {
                "id": 2,
                "uuid": "d8da6f87-b95c-4149-95a8-11583ef4a2d5",
                "name": "example-root-file",
                "description": "Information about the root file",
                "barclamp_id": 2,
                "role_id": 2,
                "type": null,
                "writable": true,
                "schema": {
                    "mapping": {
                        "=": {
                            "type": "str"
                        }
                    },
                    "type": "map"
                },
                "map": "cert/root",
                "order": 10000,
                "value": null,
                "default": {
                    "value": {
                        "destination": "/etc/example-root.pem",
                        "group": "root",
                        "perm": "0600",
                        "user": "root"
                    }
                },
                "created_at": "2016-10-25T22:04:56.327Z",
                "updated_at": "2016-10-25T22:04:56.339Z"
            },
            "x-stoplight": {
                "id": "attrib-output",
                "name": "Attrib Output",
                "public": true
            }
        },
        "availablehammers-input": {
            "type": "object",
            "properties": {
                "klass": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "example": {
                "created_at": "2016-10-25T22:05:06.093Z",
                "id": 1,
                "klass": "SecureShellHammer",
                "name": "ssh",
                "priority": 0,
                "updated_at": "2016-10-25T22:05:06.093Z",
                "uuid": "adcb794c-cc17-4e7e-93c2-23564225f142"
            },
            "x-stoplight": {
                "id": "availablehammers-input",
                "name": "AvailableHammers Input",
                "public": true
            }
        },
        "availablehammers-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "created_at": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "updated_at": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/availablehammers-input"
                }
            ],
            "example": {
                "created_at": "2016-10-25T22:05:06.093Z",
                "id": 1,
                "klass": "SecureShellHammer",
                "name": "ssh",
                "priority": 0,
                "updated_at": "2016-10-25T22:05:06.093Z",
                "uuid": "adcb794c-cc17-4e7e-93c2-23564225f142"
            },
            "x-stoplight": {
                "id": "availablehammers-output",
                "name": "AvailableHammers Output",
                "public": true
            }
        },
        "capabilities-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            },
            "example": {
                "id": 1,
                "uuid": "6593eb72-d07e-4fe8-8027-6b92beef0331",
                "name": "SUPERUSER",
                "description": "Blanket authority do do everything",
                "source": "bootstrap",
                "created_at": "2016-10-25T22:04:07.324Z",
                "updated_at": "2016-10-25T22:04:07.324Z"
            },
            "x-stoplight": {
                "id": "capabilities-input",
                "name": "Capabilities Input",
                "public": true
            }
        },
        "capabilities-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/capabilities-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "6593eb72-d07e-4fe8-8027-6b92beef0331",
                "name": "SUPERUSER",
                "description": "Blanket authority do do everything",
                "source": "bootstrap",
                "created_at": "2016-10-25T22:04:07.324Z",
                "updated_at": "2016-10-25T22:04:07.324Z"
            },
            "x-stoplight": {
                "id": "capabilities-output",
                "name": "Capabilities Output",
                "public": true
            }
        },
        "deploymentroles-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/deploymentroles-input"
                }
            ],
            "example": {
                "id": 4,
                "uuid": "e5f7d388-b5e2-4527-a39d-e284f103dda2",
                "deployment_id": 1,
                "role_id": 29,
                "created_at": "2016-10-25T22:05:39.015Z",
                "updated_at": "2016-10-25T22:05:45.678Z"
            },
            "x-stoplight": {
                "id": "deploymentroles-output",
                "name": "Deploymentroles Output",
                "public": true
            }
        },
        "deploymentroles-input": {
            "type": "object",
            "properties": {
                "deployment_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 4,
                "uuid": "e5f7d388-b5e2-4527-a39d-e284f103dda2",
                "deployment_id": 1,
                "role_id": 29,
                "created_at": "2016-10-25T22:05:39.015Z",
                "updated_at": "2016-10-25T22:05:45.678Z"
            },
            "x-stoplight": {
                "id": "deploymentroles-input",
                "name": "Deploymentroles Input",
                "public": true
            }
        },
        "deployments-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "system": {
                    "type": "boolean"
                },
                "parent_id": {
                    "type": "integer"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "nodes": {
                    "type": "object"
                }
            },
            "example": {
                "id": 2,
                "uuid": "2cd67d10-4deb-4d8b-9ef5-69a23974813a",
                "name": "rack2-48",
                "state": 2,
                "description": "",
                "system": false,
                "parent_id": 1,
                "tenant_id": 1,
                "created_at": "2016-10-25T22:32:13.421Z",
                "updated_at": "2016-10-25T22:38:08.518Z"
            },
            "x-stoplight": {
                "id": "deployments-input",
                "name": "Deployments Input",
                "public": true
            }
        },
        "deployments-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        },
                        "state": {
                            "type": "integer"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/deployments-input"
                }
            ],
            "example": {
                "id": 2,
                "uuid": "2cd67d10-4deb-4d8b-9ef5-69a23974813a",
                "name": "rack2-48",
                "state": 2,
                "description": "",
                "system": false,
                "parent_id": 1,
                "tenant_id": 1,
                "created_at": "2016-10-25T22:32:13.421Z",
                "updated_at": "2016-10-25T22:38:08.518Z"
            },
            "x-stoplight": {
                "id": "deployments-output",
                "name": "Deployments Output",
                "public": true
            }
        },
        "dnsnameentries-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "network_allocation_id": {
                    "type": "integer"
                },
                "dns_name_filter_id": {
                    "type": "integer"
                },
                "rr_type": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 1,
                "uuid": "0aa3689a-9456-44d6-9dde-3b2fd10c678a",
                "name": "phxhdc9dn0029.local.neode.org",
                "network_allocation_id": 1,
                "dns_name_filter_id": 1,
                "rr_type": "A",
                "tenant_id": 1,
                "created_at": null,
                "updated_at": null
            },
            "x-stoplight": {
                "id": "dnsnameentries-input",
                "name": "DNSNameEntries Input",
                "public": true
            }
        },
        "dnsnameentries-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/dnsnameentries-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "0aa3689a-9456-44d6-9dde-3b2fd10c678a",
                "name": "phxhdc9dn0029.local.neode.org",
                "network_allocation_id": 1,
                "dns_name_filter_id": 1,
                "rr_type": "A",
                "tenant_id": 1,
                "created_at": null,
                "updated_at": null
            },
            "x-stoplight": {
                "id": "dnsnameentries-output",
                "name": "DNSNameEntries Output",
                "public": true
            }
        },
        "dnsnamefilters-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "matcher": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 1,
                "uuid": "a40ebf92-5a74-4773-8171-0b62ff91a55a",
                "name": "default",
                "matcher": "net.category == \"admin\"",
                "priority": 50,
                "service": "system",
                "template": "{{node.name}}.local.neode.org",
                "tenant_id": 1,
                "created_at": "2016-10-25T22:06:34.795Z",
                "updated_at": "2016-10-25T22:06:34.795Z"
            },
            "x-stoplight": {
                "id": "dnsnamefilters-input",
                "name": "DNSNameFilters Input",
                "public": true
            }
        },
        "dnsnamefilters-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/dnsnamefilters-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "a40ebf92-5a74-4773-8171-0b62ff91a55a",
                "name": "default",
                "matcher": "net.category == \"admin\"",
                "priority": 50,
                "service": "system",
                "template": "{{node.name}}.local.neode.org",
                "tenant_id": 1,
                "created_at": "2016-10-25T22:06:34.795Z",
                "updated_at": "2016-10-25T22:06:34.795Z"
            },
            "x-stoplight": {
                "id": "dnsnamefilters-output",
                "name": "DNSNameFilters Output",
                "public": true
            }
        },
        "eventselector-input": {
            "type": "object",
            "properties": {
                "event_sink_id": {
                    "type": "integer"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "selector": {
                    "type": "object",
                    "properties": {
                        "event": {
                            "type": "string"
                        },
                        "obj_class": {
                            "type": "string"
                        },
                        "obj_id": {
                            "type": "string"
                        }
                    }
                }
            },
            "example": {
                "id": 1,
                "uuid": "2be67739-9a02-4d86-aaca-ac83af0e4f60",
                "event_sink_id": 2,
                "tenant_id": 1,
                "selector": {
                    "event": "on_node_delete",
                    "obj_class": "role",
                    "obj_id": "chef-client"
                },
                "created_at": "2016-10-25T22:04:57.181Z",
                "updated_at": "2016-10-25T22:04:57.181Z"
            },
            "x-stoplight": {
                "id": "eventselector-input",
                "name": "EventSelector Input",
                "public": true
            }
        },
        "eventselector-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/eventselector-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "2be67739-9a02-4d86-aaca-ac83af0e4f60",
                "event_sink_id": 2,
                "tenant_id": 1,
                "selector": {
                    "event": "on_node_delete",
                    "obj_class": "role",
                    "obj_id": "chef-client"
                },
                "created_at": "2016-10-25T22:04:57.181Z",
                "updated_at": "2016-10-25T22:04:57.181Z"
            },
            "x-stoplight": {
                "id": "eventselector-output",
                "name": "EventSelector Output",
                "public": true
            }
        },
        "eventsink-input": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "authenticator": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 2,
                "uuid": "8c107776-20be-4a7f-a84b-989bef1954b7",
                "endpoint": "inproc://role:chef-client/on_node_delete",
                "username": "",
                "authenticator": "",
                "notes": "",
                "tenant_id": 1,
                "created_at": "2016-10-25T22:04:57.165Z",
                "updated_at": "2016-10-25T22:04:57.165Z"
            },
            "x-stoplight": {
                "id": "eventsink-input",
                "name": "EventSink Input",
                "public": true
            }
        },
        "eventsink-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/eventsink-input"
                }
            ],
            "example": {
                "id": 2,
                "uuid": "8c107776-20be-4a7f-a84b-989bef1954b7",
                "endpoint": "inproc://role:chef-client/on_node_delete",
                "username": "",
                "authenticator": "",
                "notes": "",
                "tenant_id": 1,
                "created_at": "2016-10-25T22:04:57.165Z",
                "updated_at": "2016-10-25T22:04:57.165Z"
            },
            "x-stoplight": {
                "id": "eventsink-output",
                "name": "EventSink Output",
                "public": true
            }
        },
        "hammer-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/hammer-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "2469ae9b-9a10-41a0-9a33-6883741c07d3",
                "name": "ssh",
                "node_id": 2,
                "available_hammer_id": 1,
                "priority": 0,
                "endpoint": null,
                "username": "root",
                "authenticator": null,
                "actions": {
                    "power": [
                        "reboot"
                    ],
                    "xfer": [
                        "copy_from",
                        "copy_to"
                    ],
                    "run": [
                        "run"
                    ]
                },
                "created_at": null,
                "updated_at": null
            },
            "x-stoplight": {
                "id": "hammer-output",
                "name": "Hammer Output",
                "public": true
            }
        },
        "hammer-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "node_id": {
                    "type": "integer"
                },
                "available_hammer_id": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "endpoint": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "authenticator": {
                    "type": "string"
                },
                "actions": {
                    "type": "object"
                }
            },
            "example": {
                "id": 1,
                "uuid": "2469ae9b-9a10-41a0-9a33-6883741c07d3",
                "name": "ssh",
                "node_id": 2,
                "available_hammer_id": 1,
                "priority": 0,
                "endpoint": null,
                "username": "root",
                "authenticator": null,
                "actions": {
                    "power": [
                        "reboot"
                    ],
                    "xfer": [
                        "copy_from",
                        "copy_to"
                    ],
                    "run": [
                        "run"
                    ]
                },
                "created_at": null,
                "updated_at": null
            },
            "x-stoplight": {
                "id": "hammer-input",
                "name": "Hammer Input",
                "public": true
            }
        },
        "jig-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "client_role_name": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "example": {
                "id": 4,
                "uuid": "353f3064-8ef4-45b2-ae4d-6f9f8db25306",
                "name": "chef",
                "description": "Allow Rebar to manage nodes using Chef",
                "active": true,
                "client_role_name": "chef-client",
                "server": "https://192.168.0.2:4646",
                "client_name": "rebar",
                "key": "/home/rebar/.chef/rebar.pem",
                "created_at": "2016-10-25T22:04:55.592Z",
                "updated_at": "2016-10-25T22:06:09.524Z"
            },
            "x-stoplight": {
                "id": "jig-input",
                "name": "Jig Input",
                "public": true
            }
        },
        "jig-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/jig-input"
                }
            ],
            "example": {
                "id": 4,
                "uuid": "353f3064-8ef4-45b2-ae4d-6f9f8db25306",
                "name": "chef",
                "description": "Allow Rebar to manage nodes using Chef",
                "active": true,
                "client_role_name": "chef-client",
                "server": "https://192.168.0.2:4646",
                "client_name": "rebar",
                "key": "/home/rebar/.chef/rebar.pem",
                "created_at": "2016-10-25T22:04:55.592Z",
                "updated_at": "2016-10-25T22:06:09.524Z"
            },
            "x-stoplight": {
                "id": "jig-output",
                "name": "Jig Output",
                "public": true
            }
        },
        "networkallocation-input": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "node_id": {
                    "type": "integer"
                },
                "network_id": {
                    "type": "integer"
                },
                "network_range_id": {
                    "type": "integer"
                },
                "tenant_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 3,
                "uuid": "ae2ede5b-a3ea-496e-a024-41fdf9f36394",
                "address": "192.168.1.32/23",
                "node_id": 3,
                "network_id": 1,
                "network_range_id": 3,
                "tenant_id": 1,
                "created_at": "2016-10-25T22:15:28.162Z",
                "updated_at": "2016-10-25T22:15:28.162Z"
            },
            "x-stoplight": {
                "id": "networkallocation-input",
                "name": "NetworkAllocation Input",
                "public": true
            }
        },
        "networkallocation-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/networkallocation-input"
                }
            ],
            "example": {
                "id": 3,
                "uuid": "ae2ede5b-a3ea-496e-a024-41fdf9f36394",
                "address": "192.168.1.32/23",
                "node_id": 3,
                "network_id": 1,
                "network_range_id": 3,
                "tenant_id": 1,
                "created_at": "2016-10-25T22:15:28.162Z",
                "updated_at": "2016-10-25T22:15:28.162Z"
            },
            "x-stoplight": {
                "id": "networkallocation-output",
                "name": "NetworkAllocation Output",
                "public": true
            }
        },
        "networkrange-input": {
            "type": "object",
            "properties": {
                "network_id": {
                    "type": "integer"
                },
                "vlan": {
                    "type": "integer"
                },
                "team_mode": {
                    "type": "integer"
                },
                "use_team": {
                    "type": "boolean"
                },
                "use_vlan": {
                    "type": "boolean"
                },
                "use_bridge": {
                    "type": "boolean"
                },
                "overlap": {
                    "type": "boolean"
                },
                "conduit": {
                    "type": "string"
                },
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "anon_lease_time": {
                    "type": "integer"
                },
                "bound_lease_time": {
                    "type": "integer"
                },
                "allow_anon_leases": {
                    "type": "boolean"
                },
                "allow_bound_leases": {
                    "type": "boolean"
                }
            },
            "example": {
                "id": 1,
                "uuid": "c8ec17ee-4ba9-4c94-8fb4-01008c970215",
                "network_id": 1,
                "vlan": 0,
                "team_mode": 5,
                "use_team": false,
                "use_vlan": false,
                "use_bridge": false,
                "overlap": false,
                "conduit": "dhcp",
                "first": "fc45:f789:8ecd:1::1/64",
                "last": "fc45:f789:8ecd:1:ffff:ffff:ffff:fffe/64",
                "name": "host-v6",
                "tenant_id": 1,
                "anon_lease_time": 60,
                "bound_lease_time": 2592000,
                "allow_anon_leases": false,
                "allow_bound_leases": false,
                "created_at": "2016-10-25T22:06:29.706Z",
                "updated_at": "2016-10-25T22:06:29.706Z"
            },
            "x-stoplight": {
                "id": "networkrange-input",
                "name": "NetworkRange Input",
                "public": true
            }
        },
        "networkrange-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/networkrange-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "c8ec17ee-4ba9-4c94-8fb4-01008c970215",
                "network_id": 1,
                "vlan": 0,
                "team_mode": 5,
                "use_team": false,
                "use_vlan": false,
                "use_bridge": false,
                "overlap": false,
                "conduit": "dhcp",
                "first": "fc45:f789:8ecd:1::1/64",
                "last": "fc45:f789:8ecd:1:ffff:ffff:ffff:fffe/64",
                "name": "host-v6",
                "tenant_id": 1,
                "anon_lease_time": 60,
                "bound_lease_time": 2592000,
                "allow_anon_leases": false,
                "allow_bound_leases": false,
                "created_at": "2016-10-25T22:06:29.706Z",
                "updated_at": "2016-10-25T22:06:29.706Z"
            },
            "x-stoplight": {
                "id": "networkrange-output",
                "name": "NetworkRange Output",
                "public": true
            }
        },
        "networkrouter-input": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "network_id": {
                    "type": "integer"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "pref": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 1,
                "uuid": "7f034bea-68fc-4ca5-b2b2-c57c6e5f029a",
                "address": "192.168.0.2/23",
                "network_id": 1,
                "tenant_id": 1,
                "pref": 10,
                "created_at": "2016-10-25T22:06:29.738Z",
                "updated_at": "2016-10-25T22:06:29.738Z"
            },
            "x-stoplight": {
                "id": "networkrouter-input",
                "name": "NetworkRouter Input",
                "public": true
            }
        },
        "networkrouter-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/networkrouter-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "7f034bea-68fc-4ca5-b2b2-c57c6e5f029a",
                "address": "192.168.0.2/23",
                "network_id": 1,
                "tenant_id": 1,
                "pref": 10,
                "created_at": "2016-10-25T22:06:29.738Z",
                "updated_at": "2016-10-25T22:06:29.738Z"
            },
            "x-stoplight": {
                "id": "networkrouter-output",
                "name": "NetworkRouter Output",
                "public": true
            }
        },
        "network-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "deployment_id": {
                    "type": "integer"
                },
                "vlan": {
                    "type": "integer"
                },
                "team_mode": {
                    "type": "integer"
                },
                "use_team": {
                    "type": "boolean"
                },
                "use_vlan": {
                    "type": "boolean"
                },
                "use_bridge": {
                    "type": "boolean"
                },
                "configure": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "v6prefix": {
                    "type": "string"
                },
                "conduit": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "pbr": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 1,
                "uuid": "17d15fab-7956-44e5-97a6-69f22d63d7e8",
                "name": "admin-rack",
                "deployment_id": 1,
                "vlan": 0,
                "team_mode": 5,
                "use_team": false,
                "use_vlan": false,
                "use_bridge": false,
                "configure": true,
                "description": "",
                "v6prefix": "fc45:f789:8ecd:0001",
                "conduit": "dhcp",
                "category": "admin",
                "group": "rack",
                "pbr": null,
                "tenant_id": 1,
                "created_at": "2016-10-25T22:06:29.659Z",
                "updated_at": "2016-10-25T22:06:29.659Z"
            },
            "x-stoplight": {
                "id": "network-input",
                "name": "Network Input",
                "public": true
            }
        },
        "network-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/network-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "17d15fab-7956-44e5-97a6-69f22d63d7e8",
                "name": "admin-rack",
                "deployment_id": 1,
                "vlan": 0,
                "team_mode": 5,
                "use_team": false,
                "use_vlan": false,
                "use_bridge": false,
                "configure": true,
                "description": "",
                "v6prefix": "fc45:f789:8ecd:0001",
                "conduit": "dhcp",
                "category": "admin",
                "group": "rack",
                "pbr": null,
                "tenant_id": 1,
                "created_at": "2016-10-25T22:06:29.659Z",
                "updated_at": "2016-10-25T22:06:29.659Z"
            },
            "x-stoplight": {
                "id": "network-output",
                "name": "Network Output",
                "public": true
            }
        },
        "noderole-input": {
            "type": "object",
            "properties": {
                "deployment_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                },
                "node_id": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "runlog": {
                    "type": "string"
                },
                "available": {
                    "type": "boolean"
                },
                "order": {
                    "type": "integer"
                },
                "node_error": {
                    "type": "boolean"
                },
                "cohort": {
                    "type": "integer"
                },
                "run_count": {
                    "type": "integer"
                },
                "tenant_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 3,
                "uuid": "5e74d17f-176f-4af6-997a-c1cd56f7723d",
                "deployment_id": 1,
                "role_id": 25,
                "node_id": 1,
                "state": 0,
                "status": "",
                "runlog": "",
                "available": true,
                "order": 10000,
                "node_error": false,
                "cohort": 0,
                "run_count": 1,
                "tenant_id": 1,
                "created_at": "2016-10-25T22:05:38.582Z",
                "updated_at": "2016-10-25T22:05:53.755Z"
            },
            "x-stoplight": {
                "id": "noderole-input",
                "name": "NodeRole Input",
                "public": true
            }
        },
        "noderole-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/noderole-input"
                }
            ],
            "example": {
                "id": 3,
                "uuid": "5e74d17f-176f-4af6-997a-c1cd56f7723d",
                "deployment_id": 1,
                "role_id": 25,
                "node_id": 1,
                "state": 0,
                "status": "",
                "runlog": "",
                "available": true,
                "order": 10000,
                "node_error": false,
                "cohort": 0,
                "run_count": 1,
                "tenant_id": 1,
                "created_at": "2016-10-25T22:05:38.582Z",
                "updated_at": "2016-10-25T22:05:53.755Z"
            },
            "x-stoplight": {
                "id": "noderole-output",
                "name": "NodeRole Output",
                "public": true
            }
        },
        "provider-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "auth_details": {
                    "type": "object"
                },
                "type": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 1,
                "uuid": "9f901155-d535-4c8d-9217-156384cbad1f",
                "name": "metal",
                "description": "Provide basic node services for bare-metal nodes.",
                "auth_details": {},
                "type": "MetalProvider",
                "tenant_id": 1,
                "created_at": "2016-10-25T22:05:02.302Z",
                "updated_at": "2016-10-25T22:05:02.302Z"
            },
            "x-stoplight": {
                "id": "provider-input",
                "name": "Provider Input",
                "public": true
            }
        },
        "provider-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/provider-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "9f901155-d535-4c8d-9217-156384cbad1f",
                "name": "metal",
                "description": "Provide basic node services for bare-metal nodes.",
                "auth_details": {},
                "type": "MetalProvider",
                "tenant_id": 1,
                "created_at": "2016-10-25T22:05:02.302Z",
                "updated_at": "2016-10-25T22:05:02.302Z"
            },
            "x-stoplight": {
                "id": "provider-output",
                "name": "Provider Output",
                "public": true
            }
        },
        "tenant-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/tenant-input"
                }
            ],
            "example": {
                "id": 1,
                "uuid": "0e58fce1-ae25-4a43-ae94-f6d36b328614",
                "name": "system",
                "description": "Global System Tenant",
                "parent_id": 0,
                "created_at": "2016-10-25T22:04:07.347Z",
                "updated_at": "2016-10-25T22:04:07.347Z"
            },
            "x-stoplight": {
                "id": "tenant-output",
                "name": "Tenant Output",
                "public": true
            }
        },
        "tenant-input": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 1,
                "uuid": "0e58fce1-ae25-4a43-ae94-f6d36b328614",
                "name": "system",
                "description": "Global System Tenant",
                "parent_id": 0,
                "created_at": "2016-10-25T22:04:07.347Z",
                "updated_at": "2016-10-25T22:04:07.347Z"
            },
            "x-stoplight": {
                "id": "tenant-input",
                "name": "Tenant Input",
                "public": true
            }
        },
        "usertenantcapability-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/usertenantcapability-input"
                }
            ],
            "example": {
                "id": 3,
                "uuid": "8189551a-f5bb-495a-8cfe-ab49fec8e0cc",
                "user_id": 3,
                "tenant_id": 1,
                "capability_id": 3,
                "created_at": "2016-10-25T22:04:48.061Z",
                "updated_at": "2016-10-25T22:04:48.061Z"
            },
            "x-stoplight": {
                "id": "usertenantcapability-output",
                "name": "UserTenantCapability Output",
                "public": true
            }
        },
        "usertenantcapability-input": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "capability_id": {
                    "type": "integer"
                }
            },
            "example": {
                "id": 3,
                "uuid": "8189551a-f5bb-495a-8cfe-ab49fec8e0cc",
                "user_id": 3,
                "tenant_id": 1,
                "capability_id": 3,
                "created_at": "2016-10-25T22:04:48.061Z",
                "updated_at": "2016-10-25T22:04:48.061Z"
            },
            "x-stoplight": {
                "id": "usertenantcapability-input",
                "name": "UserTenantCapability Input",
                "public": true
            }
        },
        "user-input": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "current_tenant_id": {
                    "type": "integer"
                },
                "locked": {
                    "type": "boolean"
                }
            },
            "example": {
                "id": 3,
                "uuid": "fc16ab26-09d8-40c2-beb0-b9349d9728a2",
                "username": "machine-install",
                "email": "root@localhost.localdomain",
                "is_admin": false,
                "tenant_id": 1,
                "current_tenant_id": 1,
                "locked": false,
                "created_at": "2016-10-25T22:04:45.622Z",
                "updated_at": "2016-10-25T22:04:45.691Z"
            },
            "x-stoplight": {
                "id": "user-input",
                "name": "User Input",
                "public": true
            }
        },
        "user-output": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/user-input"
                }
            ],
            "example": {
                "id": 3,
                "uuid": "fc16ab26-09d8-40c2-beb0-b9349d9728a2",
                "username": "machine-install",
                "email": "root@localhost.localdomain",
                "is_admin": false,
                "tenant_id": 1,
                "current_tenant_id": 1,
                "locked": false,
                "created_at": "2016-10-25T22:04:45.622Z",
                "updated_at": "2016-10-25T22:04:45.691Z"
            },
            "x-stoplight": {
                "id": "user-output",
                "name": "User Output",
                "public": true
            }
        }
    },
    "x-stoplight": {
        "beforeScript": "",
        "afterScript": "",
        "version": {
            "groups": {
                "docs": [
                    {
                        "name": "Users",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-user",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-users",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-user",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-user",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-user",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Usertenantcapabilities",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-usertenantcapability",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-usertenantcapabilities",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-usertenantcapability",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-usertenantcapability",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-usertenantcapability",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Tenants",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-tenant",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-tenants",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-tenant",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-tenant",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-tenant",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Providers",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-provider",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-providers",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-provider",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-provider",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-provider",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Noderoles",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-noderole",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-noderoles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-noderole",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-noderole",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-noderole",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Networks",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-network",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-networks",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-network",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-network",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-network",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Networkrouters",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-networkrouter",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-networkrouters",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-networkrouter",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-networkrouter",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-networkrouter",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Networkranges",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-networkrange",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-networkranges",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-networkrange",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-networkrange",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-networkrange",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Networkallocations",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-networkallocation",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-networkallocations",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-networkallocation",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-networkallocation",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-networkallocation",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Jigs",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-jig",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-jigs",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-jig",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-jig",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-jig",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Hammers",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-hammer",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-hammers",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-hammer",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-hammer",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-hammer",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Dnsnamefilters",
                        "items": [
                            {
                                "_id": "GET-dnsnamefilters",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-dnsnamefilters",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-dnsnamefilters",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-dnsnamefilters",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-dnsnamefilters",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Eventsinks",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-eventsink",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-eventsinks",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-eventsink",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-eventsink",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-eventsink",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Eventselectors",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-eventselector",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-eventselectors",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-eventselector",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-eventselector",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-eventselector",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Dnsnameentries",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-dnsnameentries",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-dnsnameentries",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-dnsnameentries",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-dnsnameentries",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-dnsnameentries",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Deployments",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-deployments",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-deployments",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-deployments",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-deployments",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-deployments",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Deploymentroles",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-deploymentroles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-deploymentroles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-deploymentroles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-deploymentroles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-deploymentroles",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Capabilities",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-capabilities",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-capabilities",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-capabilities",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-capabilities",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-capabilities",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Availablehammers",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-availablehammers",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-availablehammers",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-availablehammers",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-availablehammers",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-availablehammers",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Attribs",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-attrib",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-attribs",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-attrib",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-attrib",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-attrib",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Barclamps",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-barclamp",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-barclamps",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-barclamp",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-barclamp",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-barclamp",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Roles",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-roles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-roles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-roles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-roles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-roles",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Profiles",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-profile",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-profiles",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-profile",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-profile",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-profile",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Nodes",
                        "divider": false,
                        "items": [
                            {
                                "_id": "GET-node",
                                "type": "endpoints"
                            },
                            {
                                "_id": "LIST-nodes",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PUT-node",
                                "type": "endpoints"
                            },
                            {
                                "_id": "POST-node",
                                "type": "endpoints"
                            },
                            {
                                "_id": "DELETE-node",
                                "type": "endpoints"
                            },
                            {
                                "_id": "PATCH-node",
                                "type": "endpoints"
                            }
                        ]
                    },
                    {
                        "name": "Models",
                        "divider": false,
                        "items": [
                            {
                                "_id": "node-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "node-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "profile-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "profile-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "roles-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "roles-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "barclamp-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "barclamp-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "attrib-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "attrib-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "availablehammers-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "availablehammers-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "capabilities-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "capabilities-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "deploymentroles-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "deploymentroles-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "deployments-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "deployments-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "dnsnameentries-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "dnsnameentries-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "eventselector-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "eventselector-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "eventsink-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "eventsink-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "dnsnamefilters-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "dnsnamefilters-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "hammer-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "hammer-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "jig-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "jig-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "networkallocation-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "networkallocation-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "networkrange-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "networkrange-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "networkrouter-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "networkrouter-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "network-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "network-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "noderole-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "noderole-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "provider-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "provider-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "tenant-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "tenant-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "usertenantcapability-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "usertenantcapability-output",
                                "type": "schemas"
                            },
                            {
                                "_id": "user-input",
                                "type": "schemas"
                            },
                            {
                                "_id": "user-output",
                                "type": "schemas"
                            }
                        ]
                    }
                ],
                "traits": [],
                "tests": [],
                "savedEntries": []
            }
        },
        "functions": {},
        "textSections": {},
        "mock": {
            "enabled": true,
            "dynamic": false
        }
    },
    "x-tests": {
        "BvxnEQkdcpgg84ZsL": {
            "id": "BvxnEQkdcpgg84ZsL",
            "name": "DNS Name Filter Test",
            "initialVariables": {
                "id": 3
            },
            "steps": [
                {
                    "id": "N8aYLGwoPXkYyrnFQ",
                    "name": "Get DNSNameFilters",
                    "capture": {
                        "body": [],
                        "headers": []
                    },
                    "request": {
                        "valid": 2,
                        "transformed": false,
                        "method": "get",
                        "url": "/dnsnamefilters/{id}",
                        "pathParams": [
                            {
                                "name": "id",
                                "value": "",
                                "type": "string",
                                "required": true
                            }
                        ],
                        "headers": [],
                        "queryString": [],
                        "cookies": [],
                        "postData": {},
                        "authentication": {},
                        "headersSize": -1,
                        "bodySize": -1
                    },
                    "assertions": [
                        {
                            "location": "response.code",
                            "op": "eq",
                            "expected": 200
                        },
                        {
                            "location": "response.body",
                            "op": "validate.pass",
                            "match": 200
                        }
                    ]
                },
                {
                    "id": "ZuiMWfHTvMdjSmexB",
                    "name": "List Dnsnamefilters",
                    "capture": {
                        "body": [],
                        "headers": []
                    },
                    "request": {
                        "valid": 2,
                        "transformed": false,
                        "method": "get",
                        "url": "/dnsnamefilters",
                        "pathParams": [],
                        "headers": [],
                        "queryString": [],
                        "cookies": [],
                        "postData": {},
                        "authentication": {},
                        "headersSize": -1,
                        "bodySize": -1
                    },
                    "assertions": [
                        {
                            "location": "response.code",
                            "op": "eq",
                            "expected": 200
                        },
                        {
                            "location": "response.body",
                            "op": "validate.pass",
                            "match": 200
                        }
                    ]
                },
                {
                    "id": "vNyuMSvJZDxoA8num",
                    "name": "Update DNSNameFilters",
                    "capture": {
                        "body": [],
                        "headers": []
                    },
                    "request": {
                        "valid": 2,
                        "transformed": false,
                        "method": "put",
                        "url": "/dnsnamefilters/{id}",
                        "pathParams": [
                            {
                                "name": "id",
                                "value": "",
                                "type": "string",
                                "required": true
                            }
                        ],
                        "headers": [],
                        "queryString": [],
                        "cookies": [],
                        "postData": {
                            "params": [],
                            "text": "{\n    \"id\": 1,\n    \"uuid\": \"a40ebf92-5a74-4773-8171-0b62ff91a55a\",\n    \"name\": \"default\",\n    \"matcher\": \"net.category == \\\"admin\\\"\",\n    \"priority\": 50,\n    \"service\": \"system\",\n    \"template\": \"{{node.name}}.local.neode.org\",\n    \"tenant_id\": 1,\n    \"created_at\": \"2016-10-25T22:06:34.795Z\",\n    \"updated_at\": \"2016-10-25T22:06:34.795Z\"\n}"
                        },
                        "authentication": {},
                        "headersSize": -1,
                        "bodySize": -1
                    },
                    "assertions": [
                        {
                            "location": "response.code",
                            "op": "eq",
                            "expected": 200
                        },
                        {
                            "location": "response.body",
                            "op": "validate.pass",
                            "match": 200
                        }
                    ]
                },
                {
                    "id": "wvkJMXACSGgKgv4d2",
                    "name": "Create DNSNameFilters",
                    "capture": {
                        "body": [],
                        "headers": []
                    },
                    "request": {
                        "valid": 2,
                        "transformed": false,
                        "method": "post",
                        "url": "/dnsnamefilters",
                        "pathParams": [],
                        "headers": [],
                        "queryString": [],
                        "cookies": [],
                        "postData": {
                            "params": [],
                            "text": "{\n    \"id\": 1,\n    \"uuid\": \"a40ebf92-5a74-4773-8171-0b62ff91a55a\",\n    \"name\": \"default\",\n    \"matcher\": \"net.category == \\\"admin\\\"\",\n    \"priority\": 50,\n    \"service\": \"system\",\n    \"template\": \"{{node.name}}.local.neode.org\",\n    \"tenant_id\": 1,\n    \"created_at\": \"2016-10-25T22:06:34.795Z\",\n    \"updated_at\": \"2016-10-25T22:06:34.795Z\"\n}"
                        },
                        "authentication": {},
                        "headersSize": -1,
                        "bodySize": -1
                    },
                    "assertions": [
                        {
                            "location": "response.code",
                            "op": "eq",
                            "expected": 201
                        },
                        {
                            "location": "response.body",
                            "op": "validate.pass",
                            "match": 201
                        }
                    ]
                },
                {
                    "id": "L4FW4hGojMAotSzca",
                    "name": "Delete DNSNameFilters",
                    "capture": {
                        "body": [],
                        "headers": []
                    },
                    "request": {
                        "valid": 2,
                        "transformed": false,
                        "method": "delete",
                        "url": "/dnsnamefilters/{id}",
                        "pathParams": [
                            {
                                "name": "id",
                                "value": "",
                                "type": "string",
                                "required": true
                            }
                        ],
                        "headers": [],
                        "queryString": [],
                        "cookies": [],
                        "postData": {},
                        "authentication": {},
                        "headersSize": -1,
                        "bodySize": -1
                    },
                    "assertions": [
                        {
                            "location": "response.code",
                            "op": "eq",
                            "expected": 204
                        }
                    ]
                }
            ]
        }
    }
}
