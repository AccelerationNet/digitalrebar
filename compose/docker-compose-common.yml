
# -recursor=dns

consul:
  image: progrium/consul
  command: -config-dir=/etc/consul.d -data-dir=/tmp/consul -server -bootstrap -ui-dir /ui 
  volumes:
    - ./config-dir/consul/server-default.json:/etc/consul.d/default.json
  env_file:
    - ./common.env
  ports:
    - "8500:8500"

#registrator:
#  image: gliderlabs/registrator
#  command: consul://consul:8500
#  volumes:
#    - /var/run/docker.sock:/tmp/docker.sock

postgres:
  image: digitalrebar/dr_postgres
  volumes:
    - ./config-dir/consul/client-default.json:/etc/consul.d/default.json
    - ./config-dir/postgres/initdb.d:/docker-entrypoint-initdb.d
#  environment:
#    SERVICE_NAME: rebar-database
#    SERVICE_TAGS: postgres
  env_file:
    - ./common.env

webproxy:
  image: digitalrebar/dr_webproxy
  volumes:
    - ./config-dir/consul/client-default.json:/etc/consul.d/default.json
  env_file:
    - ./common.env
  # GREG: Think about this.

goiardi:
  image: digitalrebar/dr_goiardi
  volumes:
    - ./config-dir/consul/client-default.json:/etc/consul.d/default.json
  env_file:
    - ./common.env

rebar_api:
  image: digitalrebar/dr_rebar_api
  volumes:
    - ./digitalrebar:/opt/digitalrebar
    - ./config-dir/consul/client-default.json:/etc/consul.d/default.json
    - ./data-dir/node:/node-data
  env_file:
    - ./common.env
  ports:
    - "3000:3000"

ntp:
  image: digitalrebar/dr_ntp
  volumes:
    - ./config-dir/consul/client-default.json:/etc/consul.d/default.json
    - ./config-dir/ntp/ntp.conf:/etc/ntp.conf
  env_file:
    - ./common.env

dns:
  image: digitalrebar/dr_dns
  volumes:
    - ./config-dir/consul/client-default.json:/etc/consul.d/default.json
    - ./config-dir/bind/named.conf:/etc/named.conf
    - ./config-dir/bind/named.conf:/etc/bind/named.conf
  env_file:
    - ./common.env

dhcp:
  image: digitalrebar/dr_dhcp
  privileged: true
  volumes:
    - ./config-dir/consul/client-default.json:/etc/consul.d/default.json
    - ./data-dir/node:/etc/rebar-data
  env_file:
    - ./common.env

#cobbler:
#  image: digitalrebar/dr_cobbler
#  volumes:
#    - ./config-dir/consul/client-default.json:/etc/consul.d/default.json
#  env_file:
#    - ./common.env
#  ports:
#    - "69/udp:69/udp"
#    - "80:80"
#    - "443:443"
#    - "25151:25151"

provisioner:
  image: digitalrebar/dr_provisioner
  privileged: true
  volumes:
    - ./config-dir/consul/client-default.json:/etc/consul.d/default.json
    - ~/.cache/digitalrebar/tftpboot:/tftpboot
    - ./data-dir/node:/etc/rebar-data
  env_file:
    - ./common.env

elasticsearch:
  image: elasticsearch
  volumes:
    - ./config-dir/elasticsearch:/usr/share/elasticsearch/config
# MAC OS ISSUE WITH THIS ONE!
#    - ./data-dir/elasticsearch:/usr/share/elasticsearch/data

logstash:
  image: logstash
  volumes:
    - ./config-dir/logstash/logstash.conf:/etc/logstash.conf
  environment:
    # otherwise logstash will keep sending its own logs to itself over and
    # over... not fun
    LOGSPOUT: ignore
  command: -f /etc/logstash.conf

kibana:
  image: kibana
  volumes:
    - ./config-dir/kibana/kibana.yml:/tmp/kibana-4.1.1-linux-x64/config/kibana.yml
  ports:
    - "5601:5601"

logspout:
  image: gliderlabs/logspout
  volumes:
    - /var/run/docker.sock:/tmp/docker.sock
  command: syslog://localhost:5000

cadvisor:
  image: google/cadvisor:latest
  volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
  ports:
    - "8080:8181"

node:
  image: digitalrebar/dr_node
  volumes:
    - ./data-dir/node:/etc/rebar-data

